!function(t,e,r,i,a){var s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},c="function"==typeof s[i]&&s[i],n=c.cache||{},o="undefined"!=typeof module&&"function"==typeof module.require&&module.require.bind(module);function l(e,r){if(!n[e]){if(!t[e]){var a="function"==typeof s[i]&&s[i];if(!r&&a)return a(e,!0);if(c)return c(e,!0);if(o&&"string"==typeof e)return o(e);var h=Error("Cannot find module '"+e+"'");throw h.code="MODULE_NOT_FOUND",h}u.resolve=function(r){var i=t[e][1][r];return null!=i?i:r},u.cache={};var m=n[e]=new l.Module(e);t[e][0].call(m.exports,u,m,m.exports,s)}return n[e].exports;function u(t){var e=u.resolve(t);return!1===e?{}:l(e)}}l.isParcelRequire=!0,l.Module=function(t){this.id=t,this.bundle=l,this.exports={}},l.modules=t,l.cache=n,l.parent=c,l.register=function(e,r){t[e]=[function(t,e){e.exports=r},{}]},Object.defineProperty(l,"root",{get:function(){return s[i]}}),s[i]=l;for(var h=0;h<e.length;h++)l(e[h])}({"64GBR":[function(t,e,r,i){var a=t("@parcel/transformer-js/src/esmodule-helpers.js");a.defineInteropFlag(r),a.export(r,"diagram",()=>j);var s=t("./mermaid-b5860b54.js"),c=t("d3");t("ts-dedent"),t("dayjs"),t("@braintree/sanitize-url"),t("dompurify"),t("khroma"),t("lodash-es/memoize.js"),t("lodash-es/merge.js"),t("stylis"),t("lodash-es/isEmpty.js");var n=function(){var t=function(t,e,r,i){for(r=r||{},i=t.length;i--;r[t[i]]=e);return r},e=[1,3],r=[1,6],i=[1,4],a=[1,5],s=[2,5],c=[1,12],n=[5,7,13,19,21,23,24,26,28,31,37,40,47],o=[7,13,19,21,23,24,26,28,31,37,40],l=[7,12,13,19,21,23,24,26,28,31,37,40],h=[7,13,47],m=[1,42],u=[1,41],y=[7,13,29,32,35,38,47],p=[1,55],d=[1,56],g=[1,57],b=[7,13,32,35,42,47],f={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,ID:46,";":47,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",46:"ID",47:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,5],[18,7],[18,7],[18,5],[18,5],[18,5],[18,7],[18,7],[18,7],[18,7],[17,2],[17,4],[17,4],[17,4],[17,6],[17,6],[17,6],[17,6],[17,6],[17,6],[17,8],[17,8],[17,8],[17,8],[17,8],[17,8],[16,2],[16,3],[16,3],[16,5],[16,5],[16,3],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,3],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[41,0],[41,1],[39,1],[39,1],[39,1],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:function(t,e,r,i,a,s,c){var n=s.length-1;switch(a){case 2:return s[n];case 3:return s[n-1];case 4:return i.setDirection(s[n-3]),s[n-1];case 6:i.setOptions(s[n-1]),this.$=s[n];break;case 7:s[n-1]+=s[n],this.$=s[n-1];break;case 9:this.$=[];break;case 10:s[n-1].push(s[n]),this.$=s[n-1];break;case 11:this.$=s[n-1];break;case 16:this.$=s[n].trim(),i.setAccTitle(this.$);break;case 17:case 18:this.$=s[n].trim(),i.setAccDescription(this.$);break;case 19:i.addSection(s[n].substr(8)),this.$=s[n].substr(8);break;case 21:i.checkout(s[n]);break;case 22:i.branch(s[n]);break;case 23:i.branch(s[n-2],s[n]);break;case 24:i.cherryPick(s[n],"",void 0);break;case 25:i.cherryPick(s[n-2],"",void 0,s[n]);break;case 26:i.cherryPick(s[n-2],"",s[n]);break;case 27:i.cherryPick(s[n-4],"",s[n],s[n-2]);break;case 28:i.cherryPick(s[n-4],"",s[n-2],s[n]);break;case 29:i.cherryPick(s[n],"",s[n-2]);break;case 30:i.cherryPick(s[n],"","");break;case 31:i.cherryPick(s[n-2],"","");break;case 32:i.cherryPick(s[n-4],"","",s[n-2]);break;case 33:i.cherryPick(s[n-4],"","",s[n]);break;case 34:i.cherryPick(s[n-2],"",s[n-4],s[n]);break;case 35:i.cherryPick(s[n-2],"","",s[n]);break;case 36:i.merge(s[n],"","","");break;case 37:i.merge(s[n-2],s[n],"","");break;case 38:i.merge(s[n-2],"",s[n],"");break;case 39:i.merge(s[n-2],"","",s[n]);break;case 40:i.merge(s[n-4],s[n],"",s[n-2]);break;case 41:i.merge(s[n-4],"",s[n],s[n-2]);break;case 42:i.merge(s[n-4],"",s[n-2],s[n]);break;case 43:i.merge(s[n-4],s[n-2],s[n],"");break;case 44:i.merge(s[n-4],s[n-2],"",s[n]);break;case 45:i.merge(s[n-4],s[n],s[n-2],"");break;case 46:i.merge(s[n-6],s[n-4],s[n-2],s[n]);break;case 47:i.merge(s[n-6],s[n],s[n-4],s[n-2]);break;case 48:i.merge(s[n-6],s[n-4],s[n],s[n-2]);break;case 49:i.merge(s[n-6],s[n-2],s[n-4],s[n]);break;case 50:i.merge(s[n-6],s[n],s[n-2],s[n-4]);break;case 51:i.merge(s[n-6],s[n-2],s[n],s[n-4]);break;case 52:i.commit(s[n]);break;case 53:i.commit("","",i.commitType.NORMAL,s[n]);break;case 54:i.commit("","",s[n],"");break;case 55:i.commit("","",s[n],s[n-2]);break;case 56:i.commit("","",s[n-2],s[n]);break;case 57:i.commit("",s[n],i.commitType.NORMAL,"");break;case 58:i.commit("",s[n-2],i.commitType.NORMAL,s[n]);break;case 59:i.commit("",s[n],i.commitType.NORMAL,s[n-2]);break;case 60:i.commit("",s[n-2],s[n],"");break;case 61:i.commit("",s[n],s[n-2],"");break;case 62:i.commit("",s[n-4],s[n-2],s[n]);break;case 63:i.commit("",s[n-4],s[n],s[n-2]);break;case 64:i.commit("",s[n-2],s[n-4],s[n]);break;case 65:i.commit("",s[n],s[n-4],s[n-2]);break;case 66:i.commit("",s[n],s[n-2],s[n-4]);break;case 67:i.commit("",s[n-2],s[n],s[n-4]);break;case 68:i.commit(s[n],"",i.commitType.NORMAL,"");break;case 69:i.commit(s[n],"",i.commitType.NORMAL,s[n-2]);break;case 70:i.commit(s[n-2],"",i.commitType.NORMAL,s[n]);break;case 71:i.commit(s[n-2],"",s[n],"");break;case 72:i.commit(s[n],"",s[n-2],"");break;case 73:i.commit(s[n],s[n-2],i.commitType.NORMAL,"");break;case 74:i.commit(s[n-2],s[n],i.commitType.NORMAL,"");break;case 75:i.commit(s[n-4],"",s[n-2],s[n]);break;case 76:i.commit(s[n-4],"",s[n],s[n-2]);break;case 77:i.commit(s[n-2],"",s[n-4],s[n]);break;case 78:i.commit(s[n],"",s[n-4],s[n-2]);break;case 79:i.commit(s[n],"",s[n-2],s[n-4]);break;case 80:i.commit(s[n-2],"",s[n],s[n-4]);break;case 81:i.commit(s[n-4],s[n],s[n-2],"");break;case 82:i.commit(s[n-4],s[n-2],s[n],"");break;case 83:i.commit(s[n-2],s[n],s[n-4],"");break;case 84:i.commit(s[n],s[n-2],s[n-4],"");break;case 85:i.commit(s[n],s[n-4],s[n-2],"");break;case 86:i.commit(s[n-2],s[n-4],s[n],"");break;case 87:i.commit(s[n-4],s[n],i.commitType.NORMAL,s[n-2]);break;case 88:i.commit(s[n-4],s[n-2],i.commitType.NORMAL,s[n]);break;case 89:i.commit(s[n-2],s[n],i.commitType.NORMAL,s[n-4]);break;case 90:i.commit(s[n],s[n-2],i.commitType.NORMAL,s[n-4]);break;case 91:i.commit(s[n],s[n-4],i.commitType.NORMAL,s[n-2]);break;case 92:i.commit(s[n-2],s[n-4],i.commitType.NORMAL,s[n]);break;case 93:i.commit(s[n-6],s[n-4],s[n-2],s[n]);break;case 94:i.commit(s[n-6],s[n-4],s[n],s[n-2]);break;case 95:i.commit(s[n-6],s[n-2],s[n-4],s[n]);break;case 96:i.commit(s[n-6],s[n],s[n-4],s[n-2]);break;case 97:i.commit(s[n-6],s[n-2],s[n],s[n-4]);break;case 98:i.commit(s[n-6],s[n],s[n-2],s[n-4]);break;case 99:i.commit(s[n-4],s[n-6],s[n-2],s[n]);break;case 100:i.commit(s[n-4],s[n-6],s[n],s[n-2]);break;case 101:i.commit(s[n-2],s[n-6],s[n-4],s[n]);break;case 102:i.commit(s[n],s[n-6],s[n-4],s[n-2]);break;case 103:i.commit(s[n-2],s[n-6],s[n],s[n-4]);break;case 104:i.commit(s[n],s[n-6],s[n-2],s[n-4]);break;case 105:i.commit(s[n],s[n-4],s[n-2],s[n-6]);break;case 106:i.commit(s[n-2],s[n-4],s[n],s[n-6]);break;case 107:i.commit(s[n],s[n-2],s[n-4],s[n-6]);break;case 108:i.commit(s[n-2],s[n],s[n-4],s[n-6]);break;case 109:i.commit(s[n-4],s[n-2],s[n],s[n-6]);break;case 110:i.commit(s[n-4],s[n],s[n-2],s[n-6]);break;case 111:i.commit(s[n-2],s[n-4],s[n-6],s[n]);break;case 112:i.commit(s[n],s[n-4],s[n-6],s[n-2]);break;case 113:i.commit(s[n-2],s[n],s[n-6],s[n-4]);break;case 114:i.commit(s[n],s[n-2],s[n-6],s[n-4]);break;case 115:i.commit(s[n-4],s[n-2],s[n-6],s[n]);break;case 116:i.commit(s[n-4],s[n],s[n-6],s[n-2]);break;case 117:this.$="";break;case 118:this.$=s[n];break;case 119:this.$=i.commitType.NORMAL;break;case 120:this.$=i.commitType.REVERSE;break;case 121:this.$=i.commitType.HIGHLIGHT}},table:[{3:1,4:2,5:e,7:r,13:i,47:a},{1:[3]},{3:7,4:2,5:e,7:r,13:i,47:a},{6:8,7:s,8:[1,9],9:[1,10],10:11,13:c},t(n,[2,124]),t(n,[2,125]),t(n,[2,126]),{1:[2,1]},{7:[1,13]},{6:14,7:s,10:11,13:c},{8:[1,15]},t(o,[2,9],{11:16,12:[1,17]}),t(l,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:s,10:11,13:c},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],37:[1,33],40:[1,32]},t(l,[2,7]),{1:[2,3]},{7:[1,36]},t(o,[2,10]),{4:37,7:r,13:i,47:a},t(o,[2,12]),t(h,[2,13]),t(h,[2,14]),t(h,[2,15]),{20:[1,38]},{22:[1,39]},t(h,[2,18]),t(h,[2,19]),t(h,[2,20]),{27:40,33:m,46:u},t(h,[2,117],{41:43,32:[1,46],33:[1,48],35:[1,44],38:[1,45],42:[1,47]}),{27:49,33:m,46:u},{32:[1,50],35:[1,51]},{27:52,33:m,46:u},{1:[2,4]},t(o,[2,11]),t(h,[2,16]),t(h,[2,17]),t(h,[2,21]),t(y,[2,122]),t(y,[2,123]),t(h,[2,52]),{33:[1,53]},{39:54,43:p,44:d,45:g},{33:[1,58]},{33:[1,59]},t(h,[2,118]),t(h,[2,36],{32:[1,60],35:[1,62],38:[1,61]}),{33:[1,63]},{33:[1,64],36:[1,65]},t(h,[2,22],{29:[1,66]}),t(h,[2,53],{32:[1,68],38:[1,67],42:[1,69]}),t(h,[2,54],{32:[1,71],35:[1,70],42:[1,72]}),t(b,[2,119]),t(b,[2,120]),t(b,[2,121]),t(h,[2,57],{35:[1,73],38:[1,74],42:[1,75]}),t(h,[2,68],{32:[1,78],35:[1,76],38:[1,77]}),{33:[1,79]},{39:80,43:p,44:d,45:g},{33:[1,81]},t(h,[2,24],{34:[1,82],35:[1,83]}),{32:[1,84]},{32:[1,85]},{30:[1,86]},{39:87,43:p,44:d,45:g},{33:[1,88]},{33:[1,89]},{33:[1,90]},{33:[1,91]},{33:[1,92]},{33:[1,93]},{39:94,43:p,44:d,45:g},{33:[1,95]},{33:[1,96]},{39:97,43:p,44:d,45:g},{33:[1,98]},t(h,[2,37],{35:[1,100],38:[1,99]}),t(h,[2,38],{32:[1,102],35:[1,101]}),t(h,[2,39],{32:[1,103],38:[1,104]}),{33:[1,105]},{33:[1,106],36:[1,107]},{33:[1,108]},{33:[1,109]},t(h,[2,23]),t(h,[2,55],{32:[1,110],42:[1,111]}),t(h,[2,59],{38:[1,112],42:[1,113]}),t(h,[2,69],{32:[1,115],38:[1,114]}),t(h,[2,56],{32:[1,116],42:[1,117]}),t(h,[2,61],{35:[1,118],42:[1,119]}),t(h,[2,72],{32:[1,121],35:[1,120]}),t(h,[2,58],{38:[1,122],42:[1,123]}),t(h,[2,60],{35:[1,124],42:[1,125]}),t(h,[2,73],{35:[1,127],38:[1,126]}),t(h,[2,70],{32:[1,129],38:[1,128]}),t(h,[2,71],{32:[1,131],35:[1,130]}),t(h,[2,74],{35:[1,133],38:[1,132]}),{39:134,43:p,44:d,45:g},{33:[1,135]},{33:[1,136]},{33:[1,137]},{33:[1,138]},{39:139,43:p,44:d,45:g},t(h,[2,25],{35:[1,140]}),t(h,[2,26],{34:[1,141]}),t(h,[2,31],{34:[1,142]}),t(h,[2,29],{34:[1,143]}),t(h,[2,30],{34:[1,144]}),{33:[1,145]},{33:[1,146]},{39:147,43:p,44:d,45:g},{33:[1,148]},{39:149,43:p,44:d,45:g},{33:[1,150]},{33:[1,151]},{33:[1,152]},{33:[1,153]},{33:[1,154]},{33:[1,155]},{33:[1,156]},{39:157,43:p,44:d,45:g},{33:[1,158]},{33:[1,159]},{33:[1,160]},{39:161,43:p,44:d,45:g},{33:[1,162]},{39:163,43:p,44:d,45:g},{33:[1,164]},{33:[1,165]},{33:[1,166]},{39:167,43:p,44:d,45:g},{33:[1,168]},t(h,[2,43],{35:[1,169]}),t(h,[2,44],{38:[1,170]}),t(h,[2,42],{32:[1,171]}),t(h,[2,45],{35:[1,172]}),t(h,[2,40],{38:[1,173]}),t(h,[2,41],{32:[1,174]}),{33:[1,175],36:[1,176]},{33:[1,177]},{33:[1,178]},{33:[1,179]},{33:[1,180]},t(h,[2,66],{42:[1,181]}),t(h,[2,79],{32:[1,182]}),t(h,[2,67],{42:[1,183]}),t(h,[2,90],{38:[1,184]}),t(h,[2,80],{32:[1,185]}),t(h,[2,89],{38:[1,186]}),t(h,[2,65],{42:[1,187]}),t(h,[2,78],{32:[1,188]}),t(h,[2,64],{42:[1,189]}),t(h,[2,84],{35:[1,190]}),t(h,[2,77],{32:[1,191]}),t(h,[2,83],{35:[1,192]}),t(h,[2,63],{42:[1,193]}),t(h,[2,91],{38:[1,194]}),t(h,[2,62],{42:[1,195]}),t(h,[2,85],{35:[1,196]}),t(h,[2,86],{35:[1,197]}),t(h,[2,92],{38:[1,198]}),t(h,[2,76],{32:[1,199]}),t(h,[2,87],{38:[1,200]}),t(h,[2,75],{32:[1,201]}),t(h,[2,81],{35:[1,202]}),t(h,[2,82],{35:[1,203]}),t(h,[2,88],{38:[1,204]}),{33:[1,205]},{39:206,43:p,44:d,45:g},{33:[1,207]},{33:[1,208]},{39:209,43:p,44:d,45:g},{33:[1,210]},t(h,[2,27]),t(h,[2,32]),t(h,[2,28]),t(h,[2,33]),t(h,[2,34]),t(h,[2,35]),{33:[1,211]},{33:[1,212]},{33:[1,213]},{39:214,43:p,44:d,45:g},{33:[1,215]},{39:216,43:p,44:d,45:g},{33:[1,217]},{33:[1,218]},{33:[1,219]},{33:[1,220]},{33:[1,221]},{33:[1,222]},{33:[1,223]},{39:224,43:p,44:d,45:g},{33:[1,225]},{33:[1,226]},{33:[1,227]},{39:228,43:p,44:d,45:g},{33:[1,229]},{39:230,43:p,44:d,45:g},{33:[1,231]},{33:[1,232]},{33:[1,233]},{39:234,43:p,44:d,45:g},t(h,[2,46]),t(h,[2,48]),t(h,[2,47]),t(h,[2,49]),t(h,[2,51]),t(h,[2,50]),t(h,[2,107]),t(h,[2,108]),t(h,[2,105]),t(h,[2,106]),t(h,[2,110]),t(h,[2,109]),t(h,[2,114]),t(h,[2,113]),t(h,[2,112]),t(h,[2,111]),t(h,[2,116]),t(h,[2,115]),t(h,[2,104]),t(h,[2,103]),t(h,[2,102]),t(h,[2,101]),t(h,[2,99]),t(h,[2,100]),t(h,[2,98]),t(h,[2,97]),t(h,[2,96]),t(h,[2,95]),t(h,[2,93]),t(h,[2,94])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:function(t,e){if(e.recoverable)this.trace(t);else{var r=Error(t);throw r.hash=e,r}},parse:function(t){var e=this,r=[0],i=[],a=[null],s=[],c=this.table,n="",o=0,l=0,h=s.slice.call(arguments,1),m=Object.create(this.lexer),u={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(u.yy[y]=this.yy[y]);m.setInput(t,u.yy),u.yy.lexer=m,u.yy.parser=this,void 0===m.yylloc&&(m.yylloc={});var p=m.yylloc;s.push(p);var d=m.options&&m.options.ranges;"function"==typeof u.yy.parseError?this.parseError=u.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var g,b,f,$,k,x,_,E,T={};;){if(b=r[r.length-1],this.defaultActions[b]?f=this.defaultActions[b]:(null==g&&(g=function(){var t;return"number"!=typeof(t=i.pop()||m.lex()||1)&&(t instanceof Array&&(t=(i=t).pop()),t=e.symbols_[t]||t),t}()),f=c[b]&&c[b][g]),void 0===f||!f.length||!f[0]){var M="";for(k in E=[],c[b])this.terminals_[k]&&k>2&&E.push("'"+this.terminals_[k]+"'");M=m.showPosition?"Parse error on line "+(o+1)+":\n"+m.showPosition()+"\nExpecting "+E.join(", ")+", got '"+(this.terminals_[g]||g)+"'":"Parse error on line "+(o+1)+": Unexpected "+(1==g?"end of input":"'"+(this.terminals_[g]||g)+"'"),this.parseError(M,{text:m.match,token:this.terminals_[g]||g,line:m.yylineno,loc:p,expected:E})}if(f[0]instanceof Array&&f.length>1)throw Error("Parse Error: multiple actions possible at state: "+b+", token: "+g);switch(f[0]){case 1:r.push(g),a.push(m.yytext),s.push(m.yylloc),r.push(f[1]),g=null,l=m.yyleng,n=m.yytext,o=m.yylineno,p=m.yylloc;break;case 2:if(x=this.productions_[f[1]][1],T.$=a[a.length-x],T._$={first_line:s[s.length-(x||1)].first_line,last_line:s[s.length-1].last_line,first_column:s[s.length-(x||1)].first_column,last_column:s[s.length-1].last_column},d&&(T._$.range=[s[s.length-(x||1)].range[0],s[s.length-1].range[1]]),void 0!==($=this.performAction.apply(T,[n,l,o,u.yy,f[1],a,s].concat(h))))return $;x&&(r=r.slice(0,-1*x*2),a=a.slice(0,-1*x),s=s.slice(0,-1*x)),r.push(this.productions_[f[1]][0]),a.push(T.$),s.push(T._$),_=c[r[r.length-2]][r[r.length-1]],r.push(_);break;case 3:return!0}}return!0}};function $(){this.yy={}}return f.lexer={EOF:1,parseError:function(t,e){if(this.yy.parser)this.yy.parser.parseError(t,e);else throw Error(t)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,r=t.split(/(?:\r\n?|\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var i=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),r.length-1&&(this.yylineno-=r.length-1);var a=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:r?(r.length===i.length?this.yylloc.first_column:0)+i[i.length-r.length].length-r[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[a[0],a[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?"...":"")+t.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var t=this.pastInput(),e=Array(t.length+1).join("-");return t+this.upcomingInput()+"\n"+e+"^"},test_match:function(t,e){var r,i,a;if(this.options.backtrack_lexer&&(a={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(a.yylloc.range=this.yylloc.range.slice(0))),(i=t[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=i.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:i?i[i.length-1].length-i[i.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],r=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),r)return r;if(this._backtrack)for(var s in a)this[s]=a[s];return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var t,e,r,i,a=this._currentRules(),s=0;s<a.length;s++)if((r=this._input.match(this.rules[a[s]]))&&(!e||r[0].length>e[0].length)){if(e=r,i=s,this.options.backtrack_lexer){if(!1!==(t=this.test_match(r,a[s])))return t;if(!this._backtrack)return!1;e=!1;continue}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,a[i]))&&t:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){return this.next()||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:"INITIAL"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(t,e,r,i){switch(r){case 0:return this.begin("acc_title"),19;case 1:return this.popState(),"acc_title_value";case 2:return this.begin("acc_descr"),21;case 3:return this.popState(),"acc_descr_value";case 4:this.begin("acc_descr_multiline");break;case 5:case 30:case 34:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:case 9:break;case 10:return 5;case 11:return 40;case 12:return 32;case 13:return 38;case 14:return 42;case 15:return 43;case 16:return 44;case 17:return 45;case 18:return 35;case 19:return 28;case 20:return 29;case 21:return 37;case 22:return 31;case 23:return 34;case 24:return 26;case 25:case 26:return 9;case 27:return 8;case 28:return"CARET";case 29:this.begin("options");break;case 31:return 12;case 32:return 36;case 33:this.begin("string");break;case 35:return 33;case 36:return 30;case 37:return 46;case 38:return 7}},rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[30,31],inclusive:!1},string:{rules:[34,35],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,36,37,38,39],inclusive:!0}}},$.prototype=f,f.Parser=$,new $}();n.parser=n;let o=(0,s.c)().gitGraph.mainBranchName,l=(0,s.c)().gitGraph.mainBranchOrder,h={},m=null,u={};u[o]={name:o,order:l};let y={};y[o]=m;let p=o,d="LR",g=0;function b(){return(0,s.y)({length:7})}let f={},$=function(t){if(void 0===y[t=(0,s.e).sanitizeText(t,(0,s.c)())]){let e=Error('Trying to checkout branch which is not yet created. (Help try using "branch '+t+'")');throw e.hash={text:"checkout "+t,token:"checkout "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+t+'"']},e}m=h[y[p=t]]};function k(t,e,r){let i=t.indexOf(e);-1===i?t.push(r):t.splice(i,1,r)}let x=function(){let t=Object.keys(h).map(function(t){return h[t]});return t.forEach(function(t){(0,s.l).debug(t.id)}),t.sort((t,e)=>t.seq-e.seq),t},_={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},E={getConfig:()=>(0,s.c)().gitGraph,setDirection:function(t){d=t},setOptions:function(t){(0,s.l).debug("options str",t),t=(t=t&&t.trim())||"{}";try{f=JSON.parse(t)}catch(t){(0,s.l).error("error while parsing gitGraph options",t.message)}},getOptions:function(){return f},commit:function(t,e,r,i){(0,s.l).debug("Entering commit:",t,e,r,i),e=(0,s.e).sanitizeText(e,(0,s.c)()),t=(0,s.e).sanitizeText(t,(0,s.c)()),i=(0,s.e).sanitizeText(i,(0,s.c)());let a={id:e||g+"-"+b(),message:t,seq:g++,type:r||_.NORMAL,tag:i||"",parents:null==m?[]:[m.id],branch:p};m=a,h[a.id]=a,y[p]=a.id,(0,s.l).debug("in pushCommit "+a.id)},branch:function(t,e){if(void 0===y[t=(0,s.e).sanitizeText(t,(0,s.c)())])y[t]=null!=m?m.id:null,u[t]={name:t,order:e?parseInt(e,10):null},$(t),(0,s.l).debug("in createBranch");else{let e=Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+t+'")');throw e.hash={text:"branch "+t,token:"branch "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+t+'"']},e}},merge:function(t,e,r,i){t=(0,s.e).sanitizeText(t,(0,s.c)()),e=(0,s.e).sanitizeText(e,(0,s.c)());let a=h[y[p]],c=h[y[t]];if(p===t){let e=Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},e}if(void 0!==a&&a){if(void 0===y[t]){let e=Error('Incorrect usage of "merge". Branch to be merged ('+t+") does not exist");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+t]},e}if(void 0!==c&&c){if(a===c){let e=Error('Incorrect usage of "merge". Both branches have same head');throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},e}if(e&&void 0!==h[e]){let a=Error('Incorrect usage of "merge". Commit with id:'+e+" already exists, use different custom Id");throw a.hash={text:"merge "+t+e+r+i,token:"merge "+t+e+r+i,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+t+" "+e+"_UNIQUE "+r+" "+i]},a}}else{let e=Error('Incorrect usage of "merge". Branch to be merged ('+t+") has no commits");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},e}}else{let e=Error('Incorrect usage of "merge". Current branch ('+p+")has no commits");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},e}let n={id:e||g+"-"+b(),message:"merged branch "+t+" into "+p,seq:g++,parents:[null==m?null:m.id,y[t]],branch:p,type:_.MERGE,customType:r,customId:!!e,tag:i||""};m=n,h[n.id]=n,y[p]=n.id,(0,s.l).debug(y),(0,s.l).debug("in mergeBranch")},cherryPick:function(t,e,r,i){if((0,s.l).debug("Entering cherryPick:",t,e,r),t=(0,s.e).sanitizeText(t,(0,s.c)()),e=(0,s.e).sanitizeText(e,(0,s.c)()),r=(0,s.e).sanitizeText(r,(0,s.c)()),i=(0,s.e).sanitizeText(i,(0,s.c)()),!t||void 0===h[t]){let r=Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw r.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},r}let a=h[t],c=a.branch;if(i&&!(Array.isArray(a.parents)&&a.parents.includes(i)))throw Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.");if(a.type===_.MERGE&&!i)throw Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.");if(!e||void 0===h[e]){if(c===p){let r=Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw r.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},r}let n=h[y[p]];if(void 0===n||!n){let r=Error('Incorrect usage of "cherry-pick". Current branch ('+p+")has no commits");throw r.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},r}let o={id:g+"-"+b(),message:"cherry-picked "+a+" into "+p,seq:g++,parents:[null==m?null:m.id,a.id],branch:p,type:_.CHERRY_PICK,tag:r??`cherry-pick:${a.id}${a.type===_.MERGE?`|parent:${i}`:""}`};m=o,h[o.id]=o,y[p]=o.id,(0,s.l).debug(y),(0,s.l).debug("in cherryPick")}},checkout:$,prettyPrint:function(){(0,s.l).debug(h),function t(e){let r=e.reduce((t,e)=>t.seq>e.seq?t:e,e[0]),i="";e.forEach(function(t){t===r?i+="	*":i+="	|"});let a=[i,r.id,r.seq];for(let t in y)y[t]===r.id&&a.push(t);if((0,s.l).debug(a.join(" ")),r.parents&&2==r.parents.length){let t=h[r.parents[0]];k(e,r,t),e.push(h[r.parents[1]])}else{if(0==r.parents.length)return;let t=h[r.parents];k(e,r,t)}t(e=function(t,e){let r=/* @__PURE__ */Object.create(null);return t.reduce((t,i)=>{let a=e(i);return r[a]||(r[a]=!0,t.push(i)),t},[])}(e,t=>t.id))}([x()[0]])},clear:function(){h={},m=null;let t=(0,s.c)().gitGraph.mainBranchName,e=(0,s.c)().gitGraph.mainBranchOrder;(y={})[t]=null,(u={})[t]={name:t,order:e},p=t,g=0,(0,s.v)()},getBranchesAsObjArray:function(){return Object.values(u).map((t,e)=>null!==t.order?t:{...t,order:parseFloat(`0.${e}`,10)}).sort((t,e)=>t.order-e.order).map(({name:t})=>({name:t}))},getBranches:function(){return y},getCommits:function(){return h},getCommitsArray:x,getCurrentBranch:function(){return p},getDirection:function(){return d},getHead:function(){return m},setAccTitle:s.s,getAccTitle:s.g,getAccDescription:s.a,setAccDescription:s.b,setDiagramTitle:s.q,getDiagramTitle:s.t,commitType:_},T={},M={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},w={},R={},L=[],v=0,I="LR",O=()=>{w={},R={},T={},v=0,L=[],I="LR"},A=t=>{let e=document.createElementNS("http://www.w3.org/2000/svg","text");for(let r of"string"==typeof t?t.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(t)?t:[]){let t=document.createElementNS("http://www.w3.org/2000/svg","tspan");t.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),t.setAttribute("dy","1em"),t.setAttribute("x","0"),t.setAttribute("class","row"),t.textContent=r.trim(),e.appendChild(t)}return e},C=t=>{let e="",r=0;return t.forEach(t=>{let i="TB"===I?R[t].y:R[t].x;i>=r&&(e=t,r=i)}),e||void 0},P=(t,e,r)=>{let i=(0,s.c)().gitGraph,a=t.append("g").attr("class","commit-bullets"),c=t.append("g").attr("class","commit-labels"),n=0;"TB"===I&&(n=30);let o=Object.keys(e).sort((t,r)=>e[t].seq-e[r].seq),l=i.parallelCommits;o.forEach(t=>{let s=e[t];if(l){if(s.parents.length){let t=C(s.parents);n="TB"===I?R[t].y+40:R[t].x+40}else n=0,"TB"===I&&(n=30)}let o=n+10,h="TB"===I?o:w[s.branch].pos,m="TB"===I?w[s.branch].pos:o;if(r){let t;let e=void 0!==s.customType&&""!==s.customType?s.customType:s.type;switch(e){case M.NORMAL:t="commit-normal";break;case M.REVERSE:t="commit-reverse";break;case M.HIGHLIGHT:t="commit-highlight";break;case M.MERGE:t="commit-merge";break;case M.CHERRY_PICK:t="commit-cherry-pick";break;default:t="commit-normal"}if(e===M.HIGHLIGHT){let e=a.append("rect");e.attr("x",m-10),e.attr("y",h-10),e.attr("height",20),e.attr("width",20),e.attr("class",`commit ${s.id} commit-highlight${w[s.branch].index%8} ${t}-outer`),a.append("rect").attr("x",m-6).attr("y",h-6).attr("height",12).attr("width",12).attr("class",`commit ${s.id} commit${w[s.branch].index%8} ${t}-inner`)}else if(e===M.CHERRY_PICK)a.append("circle").attr("cx",m).attr("cy",h).attr("r",10).attr("class",`commit ${s.id} ${t}`),a.append("circle").attr("cx",m-3).attr("cy",h+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${s.id} ${t}`),a.append("circle").attr("cx",m+3).attr("cy",h+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${s.id} ${t}`),a.append("line").attr("x1",m+3).attr("y1",h+1).attr("x2",m).attr("y2",h-5).attr("stroke","#fff").attr("class",`commit ${s.id} ${t}`),a.append("line").attr("x1",m-3).attr("y1",h+1).attr("x2",m).attr("y2",h-5).attr("stroke","#fff").attr("class",`commit ${s.id} ${t}`);else{let r=a.append("circle");if(r.attr("cx",m),r.attr("cy",h),r.attr("r",s.type===M.MERGE?9:10),r.attr("class",`commit ${s.id} commit${w[s.branch].index%8}`),e===M.MERGE){let e=a.append("circle");e.attr("cx",m),e.attr("cy",h),e.attr("r",6),e.attr("class",`commit ${t} ${s.id} commit${w[s.branch].index%8}`)}e===M.REVERSE&&a.append("path").attr("d",`M ${m-5},${h-5}L${m+5},${h+5}M${m-5},${h+5}L${m+5},${h-5}`).attr("class",`commit ${t} ${s.id} commit${w[s.branch].index%8}`)}}if("TB"===I?R[s.id]={x:m,y:o}:R[s.id]={x:o,y:h},r){if(s.type!==M.CHERRY_PICK&&(s.customId&&s.type===M.MERGE||s.type!==M.MERGE)&&i.showCommitLabel){let t=c.append("g"),e=t.insert("rect").attr("class","commit-label-bkg"),r=t.append("text").attr("x",n).attr("y",h+25).attr("class","commit-label").text(s.id),a=r.node().getBBox();if(e.attr("x",o-a.width/2-2).attr("y",h+13.5).attr("width",a.width+4).attr("height",a.height+4),"TB"===I&&(e.attr("x",m-(a.width+16+5)).attr("y",h-12),r.attr("x",m-(a.width+16)).attr("y",h+a.height-12)),"TB"!==I&&r.attr("x",o-a.width/2),i.rotateCommitLabel){if("TB"===I)r.attr("transform","rotate(-45, "+m+", "+h+")"),e.attr("transform","rotate(-45, "+m+", "+h+")");else{let e=-7.5-(a.width+10)/25*9.5,r=10+a.width/25*8.5;t.attr("transform","translate("+e+", "+r+") rotate(-45, "+n+", "+h+")")}}}if(s.tag){let t=c.insert("polygon"),e=c.append("circle"),r=c.append("text").attr("y",h-16).attr("class","tag-label").text(s.tag),i=r.node().getBBox();r.attr("x",o-i.width/2);let a=i.height/2,l=h-19.2;t.attr("class","tag-label-bkg").attr("points",`
          ${n-i.width/2-2},${l+2}
          ${n-i.width/2-2},${l-2}
          ${o-i.width/2-4},${l-a-2}
          ${o+i.width/2+4},${l-a-2}
          ${o+i.width/2+4},${l+a+2}
          ${o-i.width/2-4},${l+a+2}`),e.attr("cx",n-i.width/2+2).attr("cy",l).attr("r",1.5).attr("class","tag-hole"),"TB"===I&&(t.attr("class","tag-label-bkg").attr("points",`
            ${m},${n+2}
            ${m},${n-2}
            ${m+10},${n-a-2}
            ${m+10+i.width+4},${n-a-2}
            ${m+10+i.width+4},${n+a+2}
            ${m+10},${n+a+2}`).attr("transform","translate(12,12) rotate(45, "+m+","+n+")"),e.attr("cx",m+2).attr("cy",n).attr("transform","translate(12,12) rotate(45, "+m+","+n+")"),r.attr("x",m+5).attr("y",n+3).attr("transform","translate(14,14) rotate(45, "+m+","+n+")"))}}(n+=50)>v&&(v=n)})},S=(t,e,r,i,a)=>{let s=("TB"===I?r.x<i.x:r.y<i.y)?e.branch:t.branch,c=t=>t.branch===s,n=r=>r.seq>t.seq&&r.seq<e.seq;return Object.values(a).some(t=>n(t)&&c(t))},G=(t,e,r=0)=>{let i=t+Math.abs(t-e)/2;if(r>5)return i;if(L.every(t=>Math.abs(t-i)>=10))return L.push(i),i;let a=Math.abs(t-e);return G(t,e-a/5,r+1)},B=(t,e,r,i)=>{let a;let s=R[e.id],c=R[r.id],n=S(e,r,s,c,i),o="",l="",h=0,m=0,u=w[r.branch].index;if(r.type===M.MERGE&&e.id!==r.parents[0]&&(u=w[e.branch].index),n){o="A 10 10, 0, 0, 0,",l="A 10 10, 0, 0, 1,",h=10,m=10;let t=s.y<c.y?G(s.y,c.y):G(c.y,s.y),r=s.x<c.x?G(s.x,c.x):G(c.x,s.x);"TB"===I?s.x<c.x?a=`M ${s.x} ${s.y} L ${r-h} ${s.y} ${l} ${r} ${s.y+m} L ${r} ${c.y-h} ${o} ${r+m} ${c.y} L ${c.x} ${c.y}`:(u=w[e.branch].index,a=`M ${s.x} ${s.y} L ${r+h} ${s.y} ${o} ${r} ${s.y+m} L ${r} ${c.y-h} ${l} ${r-m} ${c.y} L ${c.x} ${c.y}`):s.y<c.y?a=`M ${s.x} ${s.y} L ${s.x} ${t-h} ${o} ${s.x+m} ${t} L ${c.x-h} ${t} ${l} ${c.x} ${t+m} L ${c.x} ${c.y}`:(u=w[e.branch].index,a=`M ${s.x} ${s.y} L ${s.x} ${t+h} ${l} ${s.x+m} ${t} L ${c.x-h} ${t} ${o} ${c.x} ${t-m} L ${c.x} ${c.y}`)}else o="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,"TB"===I?(s.x<c.x&&(a=r.type===M.MERGE&&e.id!==r.parents[0]?`M ${s.x} ${s.y} L ${s.x} ${c.y-h} ${o} ${s.x+m} ${c.y} L ${c.x} ${c.y}`:`M ${s.x} ${s.y} L ${c.x-h} ${s.y} ${l} ${c.x} ${s.y+m} L ${c.x} ${c.y}`),s.x>c.x&&(o="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,a=r.type===M.MERGE&&e.id!==r.parents[0]?`M ${s.x} ${s.y} L ${s.x} ${c.y-h} ${l} ${s.x-m} ${c.y} L ${c.x} ${c.y}`:`M ${s.x} ${s.y} L ${c.x+h} ${s.y} ${o} ${c.x} ${s.y+m} L ${c.x} ${c.y}`),s.x===c.x&&(a=`M ${s.x} ${s.y} L ${c.x} ${c.y}`)):(s.y<c.y&&(a=r.type===M.MERGE&&e.id!==r.parents[0]?`M ${s.x} ${s.y} L ${c.x-h} ${s.y} ${l} ${c.x} ${s.y+m} L ${c.x} ${c.y}`:`M ${s.x} ${s.y} L ${s.x} ${c.y-h} ${o} ${s.x+m} ${c.y} L ${c.x} ${c.y}`),s.y>c.y&&(a=r.type===M.MERGE&&e.id!==r.parents[0]?`M ${s.x} ${s.y} L ${c.x-h} ${s.y} ${o} ${c.x} ${s.y-m} L ${c.x} ${c.y}`:`M ${s.x} ${s.y} L ${s.x} ${c.y+h} ${l} ${s.x+m} ${c.y} L ${c.x} ${c.y}`),s.y===c.y&&(a=`M ${s.x} ${s.y} L ${c.x} ${c.y}`));t.append("path").attr("d",a).attr("class","arrow arrow"+u%8)},N=(t,e)=>{let r=t.append("g").attr("class","commit-arrows");Object.keys(e).forEach(t=>{let i=e[t];i.parents&&i.parents.length>0&&i.parents.forEach(t=>{B(r,e[t],i,e)})})},H=(t,e)=>{let r=(0,s.c)().gitGraph,i=t.append("g");e.forEach((t,e)=>{let a=e%8,s=w[t.name].pos,c=i.append("line");c.attr("x1",0),c.attr("y1",s),c.attr("x2",v),c.attr("y2",s),c.attr("class","branch branch"+a),"TB"===I&&(c.attr("y1",30),c.attr("x1",s),c.attr("y2",v),c.attr("x2",s)),L.push(s);let n=A(t.name),o=i.insert("rect"),l=i.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+a);l.node().appendChild(n);let h=n.getBBox();o.attr("class","branchLabelBkg label"+a).attr("rx",4).attr("ry",4).attr("x",-h.width-4-(!0===r.rotateCommitLabel?30:0)).attr("y",-h.height/2+8).attr("width",h.width+18).attr("height",h.height+4),l.attr("transform","translate("+(-h.width-14-(!0===r.rotateCommitLabel?30:0))+", "+(s-h.height/2-1)+")"),"TB"===I&&(o.attr("x",s-h.width/2-10).attr("y",0),l.attr("transform","translate("+(s-h.width/2-5)+", 0)")),"TB"!==I&&o.attr("transform","translate(-19, "+(s-h.height/2)+")")})},j={parser:n,db:E,renderer:{draw:function(t,e,r,i){O();let a=(0,s.c)(),n=a.gitGraph;(0,s.l).debug("in gitgraph renderer",t+"\n","id:",e,r),T=i.db.getCommits();let o=i.db.getBranchesAsObjArray();I=i.db.getDirection();let l=(0,c.select)(`[id="${e}"]`),h=0;o.forEach((t,e)=>{let r=A(t.name),i=l.append("g"),a=i.insert("g").attr("class","branchLabel"),s=a.insert("g").attr("class","label branch-label");s.node().appendChild(r);let c=r.getBBox();w[t.name]={pos:h,index:e},h+=50+(n.rotateCommitLabel?40:0)+("TB"===I?c.width/2:0),s.remove(),a.remove(),i.remove()}),P(l,T,!1),n.showBranches&&H(l,o),N(l,T),P(l,T,!0),(0,s.u).insertTitle(l,"gitTitleText",n.titleTopMargin,i.db.getDiagramTitle()),(0,s.z)(void 0,l,n.diagramPadding,n.useMaxWidth??a.useMaxWidth)}},styles:t=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(e=>`
        .branch-label${e} { fill: ${t["gitBranchLabel"+e]}; }
        .commit${e} { stroke: ${t["git"+e]}; fill: ${t["git"+e]}; }
        .commit-highlight${e} { stroke: ${t["gitInv"+e]}; fill: ${t["gitInv"+e]}; }
        .label${e}  { fill: ${t["git"+e]}; }
        .arrow${e} { stroke: ${t["git"+e]}; }
        `).join("\n")}

  .branch {
    stroke-width: 1;
    stroke: ${t.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${t.commitLabelFontSize}; fill: ${t.commitLabelColor};}
  .commit-label-bkg { font-size: ${t.commitLabelFontSize}; fill: ${t.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${t.tagLabelFontSize}; fill: ${t.tagLabelColor};}
  .tag-label-bkg { fill: ${t.tagLabelBackground}; stroke: ${t.tagLabelBorder}; }
  .tag-hole { fill: ${t.textColor}; }

  .commit-merge {
    stroke: ${t.primaryColor};
    fill: ${t.primaryColor};
  }
  .commit-reverse {
    stroke: ${t.primaryColor};
    fill: ${t.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${t.primaryColor};
    fill: ${t.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${t.textColor};
  }
`}},{"./mermaid-b5860b54.js":"2omMO",d3:"ahWNw","ts-dedent":"azOLv",dayjs:"8F3kd","@braintree/sanitize-url":"eIPUt",dompurify:"5cPaM",khroma:"kb6Zw","lodash-es/memoize.js":"kSZfU","lodash-es/merge.js":"ije1P",stylis:"lfeQC","lodash-es/isEmpty.js":"941eg","@parcel/transformer-js/src/esmodule-helpers.js":"k3151"}]},[],0,"parcelRequire94c2");
//# sourceMappingURL=gitGraphDiagram-72cf32ee.47625a79.js.map
