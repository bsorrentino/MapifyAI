{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCuSA,EAAA,MAAA,CAAA,EAAA,UAAA,IACE,GAxSF,IAAA,EAAA,EAAA,wBACA,EAAA,EAAA,MACA,EAAA,EAAA,qCACA,EAAA,EAAA,yBACA,EAAA,EAAA,uBACA,EAAA,aACA,EAAA,SACA,EAAA,2BACA,EAAA,aACA,EAAA,UACA,EAAA,wBACA,EAAA,sBACA,EAAA,UACA,EAAA,wBACA,EAAA,kCACA,EAAA,oCACA,EAAA,uBACA,EAAA,4BACA,EAAA,4BACA,IAAM,EAAe,AAAC,GAAQ,AAAA,CAAA,EAAA,EAAA,CAAK,AAAL,EAAO,YAAY,CAAC,EAAK,AAAA,CAAA,EAAA,EAAA,CAAS,AAAT,KACnD,EAAO,CACT,cAAe,GACf,QAAS,EACT,WAAY,GACZ,MAAO,KAAK,CACd,EACM,EAAgB,SAAS,CAAU,CAAE,CAAC,CAAE,CAAG,CAAE,CAAO,EACxD,IAA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","sources":["<anon>","node_modules/mermaid/dist/classDiagram-v2-f2320105.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"fFBiN\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"diagram\", ()=>diagram);\nvar _styles9A916D00Js = require(\"./styles-9a916d00.js\");\nvar _d3 = require(\"d3\");\nvar _indexJs = require(\"dagre-d3-es/src/graphlib/index.js\");\nvar _mermaidB5860B54Js = require(\"./mermaid-b5860b54.js\");\nvar _index3862675EJs = require(\"./index-3862675e.js\");\nvar _tsDedent = require(\"ts-dedent\");\nvar _dayjs = require(\"dayjs\");\nvar _sanitizeUrl = require(\"@braintree/sanitize-url\");\nvar _dompurify = require(\"dompurify\");\nvar _khroma = require(\"khroma\");\nvar _memoizeJs = require(\"lodash-es/memoize.js\");\nvar _mergeJs = require(\"lodash-es/merge.js\");\nvar _stylis = require(\"stylis\");\nvar _isEmptyJs = require(\"lodash-es/isEmpty.js\");\nvar _indexJs1 = require(\"dagre-d3-es/src/dagre/index.js\");\nvar _jsonJs = require(\"dagre-d3-es/src/graphlib/json.js\");\nvar _edgesE0Da2A9EJs = require(\"./edges-e0da2a9e.js\");\nvar _createText2E5E7Dd3Js = require(\"./createText-2e5e7dd3.js\");\nvar _mdastUtilFromMarkdown = require(\"mdast-util-from-markdown\");\nconst sanitizeText = (txt)=>(0, _mermaidB5860B54Js.e).sanitizeText(txt, (0, _mermaidB5860B54Js.c)());\nlet conf = {\n    dividerMargin: 10,\n    padding: 5,\n    textHeight: 10,\n    curve: void 0\n};\nconst addNamespaces = function(namespaces, g, _id, diagObj) {\n    const keys = Object.keys(namespaces);\n    (0, _mermaidB5860B54Js.l).info(\"keys:\", keys);\n    (0, _mermaidB5860B54Js.l).info(namespaces);\n    keys.forEach(function(id) {\n        var _a, _b;\n        const vertex = namespaces[id];\n        const shape = \"rect\";\n        const node = {\n            shape,\n            id: vertex.id,\n            domId: vertex.domId,\n            labelText: sanitizeText(vertex.id),\n            labelStyle: \"\",\n            style: \"fill: none; stroke: black\",\n            // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n            padding: ((_a = (0, _mermaidB5860B54Js.c)().flowchart) == null ? void 0 : _a.padding) ?? ((_b = (0, _mermaidB5860B54Js.c)().class) == null ? void 0 : _b.padding)\n        };\n        g.setNode(vertex.id, node);\n        addClasses(vertex.classes, g, _id, diagObj, vertex.id);\n        (0, _mermaidB5860B54Js.l).info(\"setNode\", node);\n    });\n};\nconst addClasses = function(classes, g, _id, diagObj, parent) {\n    const keys = Object.keys(classes);\n    (0, _mermaidB5860B54Js.l).info(\"keys:\", keys);\n    (0, _mermaidB5860B54Js.l).info(classes);\n    keys.filter((id)=>classes[id].parent == parent).forEach(function(id) {\n        var _a, _b;\n        const vertex = classes[id];\n        const cssClassStr = vertex.cssClasses.join(\" \");\n        const styles2 = (0, _mermaidB5860B54Js.k)(vertex.styles);\n        const vertexText = vertex.label ?? vertex.id;\n        const radius = 0;\n        const shape = \"class_box\";\n        const node = {\n            labelStyle: styles2.labelStyle,\n            shape,\n            labelText: sanitizeText(vertexText),\n            classData: vertex,\n            rx: radius,\n            ry: radius,\n            class: cssClassStr,\n            style: styles2.style,\n            id: vertex.id,\n            domId: vertex.domId,\n            tooltip: diagObj.db.getTooltip(vertex.id, parent) || \"\",\n            haveCallback: vertex.haveCallback,\n            link: vertex.link,\n            width: vertex.type === \"group\" ? 500 : void 0,\n            type: vertex.type,\n            // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n            padding: ((_a = (0, _mermaidB5860B54Js.c)().flowchart) == null ? void 0 : _a.padding) ?? ((_b = (0, _mermaidB5860B54Js.c)().class) == null ? void 0 : _b.padding)\n        };\n        g.setNode(vertex.id, node);\n        if (parent) g.setParent(vertex.id, parent);\n        (0, _mermaidB5860B54Js.l).info(\"setNode\", node);\n    });\n};\nconst addNotes = function(notes, g, startEdgeId, classes) {\n    (0, _mermaidB5860B54Js.l).info(notes);\n    notes.forEach(function(note, i) {\n        var _a, _b;\n        const vertex = note;\n        const cssNoteStr = \"\";\n        const styles2 = {\n            labelStyle: \"\",\n            style: \"\"\n        };\n        const vertexText = vertex.text;\n        const radius = 0;\n        const shape = \"note\";\n        const node = {\n            labelStyle: styles2.labelStyle,\n            shape,\n            labelText: sanitizeText(vertexText),\n            noteData: vertex,\n            rx: radius,\n            ry: radius,\n            class: cssNoteStr,\n            style: styles2.style,\n            id: vertex.id,\n            domId: vertex.id,\n            tooltip: \"\",\n            type: \"note\",\n            // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n            padding: ((_a = (0, _mermaidB5860B54Js.c)().flowchart) == null ? void 0 : _a.padding) ?? ((_b = (0, _mermaidB5860B54Js.c)().class) == null ? void 0 : _b.padding)\n        };\n        g.setNode(vertex.id, node);\n        (0, _mermaidB5860B54Js.l).info(\"setNode\", node);\n        if (!vertex.class || !(vertex.class in classes)) return;\n        const edgeId = startEdgeId + i;\n        const edgeData = {\n            id: `edgeNote${edgeId}`,\n            //Set relationship style and line type\n            classes: \"relation\",\n            pattern: \"dotted\",\n            // Set link type for rendering\n            arrowhead: \"none\",\n            //Set edge extra labels\n            startLabelRight: \"\",\n            endLabelLeft: \"\",\n            //Set relation arrow types\n            arrowTypeStart: \"none\",\n            arrowTypeEnd: \"none\",\n            style: \"fill:none\",\n            labelStyle: \"\",\n            curve: (0, _mermaidB5860B54Js.n)(conf.curve, (0, _d3.curveLinear))\n        };\n        g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n    });\n};\nconst addRelations = function(relations, g) {\n    const conf2 = (0, _mermaidB5860B54Js.c)().flowchart;\n    let cnt = 0;\n    relations.forEach(function(edge) {\n        var _a;\n        cnt++;\n        const edgeData = {\n            //Set relationship style and line type\n            classes: \"relation\",\n            pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n            id: `id_${edge.id1}_${edge.id2}_${cnt}`,\n            // Set link type for rendering\n            arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n            //Set edge extra labels\n            startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n            endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n            //Set relation arrow types\n            arrowTypeStart: getArrowMarker(edge.relation.type1),\n            arrowTypeEnd: getArrowMarker(edge.relation.type2),\n            style: \"fill:none\",\n            labelStyle: \"\",\n            curve: (0, _mermaidB5860B54Js.n)(conf2 == null ? void 0 : conf2.curve, (0, _d3.curveLinear))\n        };\n        (0, _mermaidB5860B54Js.l).info(edgeData, edge);\n        if (edge.style !== void 0) {\n            const styles2 = (0, _mermaidB5860B54Js.k)(edge.style);\n            edgeData.style = styles2.style;\n            edgeData.labelStyle = styles2.labelStyle;\n        }\n        edge.text = edge.title;\n        if (edge.text === void 0) {\n            if (edge.style !== void 0) edgeData.arrowheadStyle = \"fill: #333\";\n        } else {\n            edgeData.arrowheadStyle = \"fill: #333\";\n            edgeData.labelpos = \"c\";\n            if (((_a = (0, _mermaidB5860B54Js.c)().flowchart) == null ? void 0 : _a.htmlLabels) ?? (0, _mermaidB5860B54Js.c)().htmlLabels) {\n                edgeData.labelType = \"html\";\n                edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n            } else {\n                edgeData.labelType = \"text\";\n                edgeData.label = edge.text.replace((0, _mermaidB5860B54Js.e).lineBreakRegex, \"\\n\");\n                if (edge.style === void 0) edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n                edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n            }\n        }\n        g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n    });\n};\nconst setConf = function(cnf) {\n    conf = {\n        ...conf,\n        ...cnf\n    };\n};\nconst draw = async function(text, id, _version, diagObj) {\n    (0, _mermaidB5860B54Js.l).info(\"Drawing class - \", id);\n    const conf2 = (0, _mermaidB5860B54Js.c)().flowchart ?? (0, _mermaidB5860B54Js.c)().class;\n    const securityLevel = (0, _mermaidB5860B54Js.c)().securityLevel;\n    (0, _mermaidB5860B54Js.l).info(\"config:\", conf2);\n    const nodeSpacing = (conf2 == null ? void 0 : conf2.nodeSpacing) ?? 50;\n    const rankSpacing = (conf2 == null ? void 0 : conf2.rankSpacing) ?? 50;\n    const g = new _indexJs.Graph({\n        multigraph: true,\n        compound: true\n    }).setGraph({\n        rankdir: diagObj.db.getDirection(),\n        nodesep: nodeSpacing,\n        ranksep: rankSpacing,\n        marginx: 8,\n        marginy: 8\n    }).setDefaultEdgeLabel(function() {\n        return {};\n    });\n    const namespaces = diagObj.db.getNamespaces();\n    const classes = diagObj.db.getClasses();\n    const relations = diagObj.db.getRelations();\n    const notes = diagObj.db.getNotes();\n    (0, _mermaidB5860B54Js.l).info(relations);\n    addNamespaces(namespaces, g, id, diagObj);\n    addClasses(classes, g, id, diagObj);\n    addRelations(relations, g);\n    addNotes(notes, g, relations.length + 1, classes);\n    let sandboxElement;\n    if (securityLevel === \"sandbox\") sandboxElement = (0, _d3.select)(\"#i\" + id);\n    const root = securityLevel === \"sandbox\" ? (0, _d3.select)(sandboxElement.nodes()[0].contentDocument.body) : (0, _d3.select)(\"body\");\n    const svg = root.select(`[id=\"${id}\"]`);\n    const element = root.select(\"#\" + id + \" g\");\n    await (0, _index3862675EJs.r)(element, g, [\n        \"aggregation\",\n        \"extension\",\n        \"composition\",\n        \"dependency\",\n        \"lollipop\"\n    ], \"classDiagram\", id);\n    (0, _mermaidB5860B54Js.u).insertTitle(svg, \"classTitleText\", (conf2 == null ? void 0 : conf2.titleTopMargin) ?? 5, diagObj.db.getDiagramTitle());\n    (0, _mermaidB5860B54Js.o)(g, svg, conf2 == null ? void 0 : conf2.diagramPadding, conf2 == null ? void 0 : conf2.useMaxWidth);\n    if (!(conf2 == null ? void 0 : conf2.htmlLabels)) {\n        const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n        const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n        for (const label of labels){\n            const dim = label.getBBox();\n            const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n            rect.setAttribute(\"rx\", 0);\n            rect.setAttribute(\"ry\", 0);\n            rect.setAttribute(\"width\", dim.width);\n            rect.setAttribute(\"height\", dim.height);\n            label.insertBefore(rect, label.firstChild);\n        }\n    }\n};\nfunction getArrowMarker(type) {\n    let marker;\n    switch(type){\n        case 0:\n            marker = \"aggregation\";\n            break;\n        case 1:\n            marker = \"extension\";\n            break;\n        case 2:\n            marker = \"composition\";\n            break;\n        case 3:\n            marker = \"dependency\";\n            break;\n        case 4:\n            marker = \"lollipop\";\n            break;\n        default:\n            marker = \"none\";\n    }\n    return marker;\n}\nconst renderer = {\n    setConf,\n    draw\n};\nconst diagram = {\n    parser: (0, _styles9A916D00Js.p),\n    db: (0, _styles9A916D00Js.d),\n    renderer,\n    styles: (0, _styles9A916D00Js.s),\n    init: (cnf)=>{\n        if (!cnf.class) cnf.class = {};\n        cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        (0, _styles9A916D00Js.d).clear();\n    }\n};\n\n},{\"./styles-9a916d00.js\":\"3zEjJ\",\"d3\":\"ahWNw\",\"dagre-d3-es/src/graphlib/index.js\":\"j6NXy\",\"./mermaid-b5860b54.js\":\"2omMO\",\"./index-3862675e.js\":\"8RdUO\",\"ts-dedent\":\"azOLv\",\"dayjs\":\"8F3kd\",\"@braintree/sanitize-url\":\"eIPUt\",\"dompurify\":\"5cPaM\",\"khroma\":\"kb6Zw\",\"lodash-es/memoize.js\":\"kSZfU\",\"lodash-es/merge.js\":\"ije1P\",\"stylis\":\"lfeQC\",\"lodash-es/isEmpty.js\":\"941eg\",\"dagre-d3-es/src/dagre/index.js\":\"9xp7T\",\"dagre-d3-es/src/graphlib/json.js\":\"5pdrN\",\"./edges-e0da2a9e.js\":\"3cEzO\",\"./createText-2e5e7dd3.js\":\"3A2vP\",\"mdast-util-from-markdown\":\"i9FLz\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=classDiagram-v2-f2320105.24fe20b0.js.map\n","import { p as parser, d as db, s as styles } from \"./styles-9a916d00.js\";\nimport { select, curveLinear } from \"d3\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { l as log, c as getConfig, u as utils, o as setupGraphViewbox, k as getStylesFromArray, n as interpolateToCurve, e as common } from \"./mermaid-b5860b54.js\";\nimport { r as render } from \"./index-3862675e.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nconst sanitizeText = (txt) => common.sanitizeText(txt, getConfig());\nlet conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n  curve: void 0\n};\nconst addNamespaces = function(namespaces, g, _id, diagObj) {\n  const keys = Object.keys(namespaces);\n  log.info(\"keys:\", keys);\n  log.info(namespaces);\n  keys.forEach(function(id) {\n    var _a, _b;\n    const vertex = namespaces[id];\n    const shape = \"rect\";\n    const node = {\n      shape,\n      id: vertex.id,\n      domId: vertex.domId,\n      labelText: sanitizeText(vertex.id),\n      labelStyle: \"\",\n      style: \"fill: none; stroke: black\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    addClasses(vertex.classes, g, _id, diagObj, vertex.id);\n    log.info(\"setNode\", node);\n  });\n};\nconst addClasses = function(classes, g, _id, diagObj, parent) {\n  const keys = Object.keys(classes);\n  log.info(\"keys:\", keys);\n  log.info(classes);\n  keys.filter((id) => classes[id].parent == parent).forEach(function(id) {\n    var _a, _b;\n    const vertex = classes[id];\n    const cssClassStr = vertex.cssClasses.join(\" \");\n    const styles2 = getStylesFromArray(vertex.styles);\n    const vertexText = vertex.label ?? vertex.id;\n    const radius = 0;\n    const shape = \"class_box\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssClassStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      tooltip: diagObj.db.getTooltip(vertex.id, parent) || \"\",\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    if (parent) {\n      g.setParent(vertex.id, parent);\n    }\n    log.info(\"setNode\", node);\n  });\n};\nconst addNotes = function(notes, g, startEdgeId, classes) {\n  log.info(notes);\n  notes.forEach(function(note, i) {\n    var _a, _b;\n    const vertex = note;\n    const cssNoteStr = \"\";\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.text;\n    const radius = 0;\n    const shape = \"note\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      noteData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssNoteStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.id,\n      tooltip: \"\",\n      type: \"note\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    log.info(\"setNode\", node);\n    if (!vertex.class || !(vertex.class in classes)) {\n      return;\n    }\n    const edgeId = startEdgeId + i;\n    const edgeData = {\n      id: `edgeNote${edgeId}`,\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: \"dotted\",\n      // Set link type for rendering\n      arrowhead: \"none\",\n      //Set edge extra labels\n      startLabelRight: \"\",\n      endLabelLeft: \"\",\n      //Set relation arrow types\n      arrowTypeStart: \"none\",\n      arrowTypeEnd: \"none\",\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf.curve, curveLinear)\n    };\n    g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n  });\n};\nconst addRelations = function(relations, g) {\n  const conf2 = getConfig().flowchart;\n  let cnt = 0;\n  relations.forEach(function(edge) {\n    var _a;\n    cnt++;\n    const edgeData = {\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n      id: `id_${edge.id1}_${edge.id2}_${cnt}`,\n      // Set link type for rendering\n      arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n      //Set edge extra labels\n      startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n      endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n      //Set relation arrow types\n      arrowTypeStart: getArrowMarker(edge.relation.type1),\n      arrowTypeEnd: getArrowMarker(edge.relation.type2),\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf2 == null ? void 0 : conf2.curve, curveLinear)\n    };\n    log.info(edgeData, edge);\n    if (edge.style !== void 0) {\n      const styles2 = getStylesFromArray(edge.style);\n      edgeData.style = styles2.style;\n      edgeData.labelStyle = styles2.labelStyle;\n    }\n    edge.text = edge.title;\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (((_a = getConfig().flowchart) == null ? void 0 : _a.htmlLabels) ?? getConfig().htmlLabels) {\n        edgeData.labelType = \"html\";\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n};\nconst setConf = function(cnf) {\n  conf = {\n    ...conf,\n    ...cnf\n  };\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing class - \", id);\n  const conf2 = getConfig().flowchart ?? getConfig().class;\n  const securityLevel = getConfig().securityLevel;\n  log.info(\"config:\", conf2);\n  const nodeSpacing = (conf2 == null ? void 0 : conf2.nodeSpacing) ?? 50;\n  const rankSpacing = (conf2 == null ? void 0 : conf2.rankSpacing) ?? 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: diagObj.db.getDirection(),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const namespaces = diagObj.db.getNamespaces();\n  const classes = diagObj.db.getClasses();\n  const relations = diagObj.db.getRelations();\n  const notes = diagObj.db.getNotes();\n  log.info(relations);\n  addNamespaces(namespaces, g, id, diagObj);\n  addClasses(classes, g, id, diagObj);\n  addRelations(relations, g);\n  addNotes(notes, g, relations.length + 1, classes);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(\n    element,\n    g,\n    [\"aggregation\", \"extension\", \"composition\", \"dependency\", \"lollipop\"],\n    \"classDiagram\",\n    id\n  );\n  utils.insertTitle(svg, \"classTitleText\", (conf2 == null ? void 0 : conf2.titleTopMargin) ?? 5, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2 == null ? void 0 : conf2.diagramPadding, conf2 == null ? void 0 : conf2.useMaxWidth);\n  if (!(conf2 == null ? void 0 : conf2.htmlLabels)) {\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n};\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = \"aggregation\";\n      break;\n    case 1:\n      marker = \"extension\";\n      break;\n    case 2:\n      marker = \"composition\";\n      break;\n    case 3:\n      marker = \"dependency\";\n      break;\n    case 4:\n      marker = \"lollipop\";\n      break;\n    default:\n      marker = \"none\";\n  }\n  return marker;\n}\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","diagram","_styles9A916D00Js","_d3","_indexJs","_mermaidB5860B54Js","_index3862675EJs","sanitizeText","txt","e","c","conf","dividerMargin","padding","textHeight","curve","addNamespaces","namespaces","g","_id","diagObj","keys","l","info","forEach","_a","_b","vertex","node","shape","domId","labelText","labelStyle","style","flowchart","class","setNode","addClasses","classes","filter","cssClassStr","cssClasses","join","styles2","k","styles","vertexText","label","classData","rx","ry","tooltip","db","getTooltip","haveCallback","link","width","type","setParent","addNotes","notes","startEdgeId","note","text","noteData","edgeId","edgeData","pattern","arrowhead","startLabelRight","endLabelLeft","arrowTypeStart","arrowTypeEnd","n","curveLinear","setEdge","addRelations","relations","conf2","cnt","edge","relation","lineType","id1","id2","relationTitle1","relationTitle2","getArrowMarker","type1","type2","title","arrowheadStyle","labelpos","htmlLabels","labelType","replace","lineBreakRegex","draw","_version","sandboxElement","securityLevel","nodeSpacing","rankSpacing","Graph","multigraph","compound","setGraph","rankdir","getDirection","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","getNamespaces","getClasses","getRelations","getNotes","select","root","nodes","contentDocument","body","svg","element","r","u","insertTitle","titleTopMargin","getDiagramTitle","o","diagramPadding","useMaxWidth","doc","document","querySelectorAll","dim","getBBox","rect","createElementNS","setAttribute","height","insertBefore","firstChild","marker","parser","p","d","renderer","setConf","cnf","s","init","arrowMarkerAbsolute","clear"],"version":3,"file":"classDiagram-v2-f2320105.24fe20b0.js.map"}