{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCmmBA,EAAA,MAAA,CAAA,EAAA,UAAA,IACE,GApmBF,IAAA,EAAA,EAAA,wBACA,EAAA,EAAA,qCACA,EAAA,EAAA,MACA,EAAA,EAAA,yBACA,EAAA,EAAA,eACA,EAAA,EAAA,oCACA,EAAA,EAAA,oDACA,EAAA,EAAA,2DACA,EAAA,EAAA,wDACA,EAAA,EAAA,wBAgBA,SAAS,EAAS,CAAM,CAAE,CAAI,CAAE,CAAI,EAClC,IAEM,EAAI,AAAC,CAAA,AAFD,EAAK,KAAK,CACV,EAAK,MAAM,AACN,EAAK,GACd,EAAS,CACb,CAAE,EAAG,EAAI,EAAG,EAAG,CAAE,EACjB,CAAE,EAAG,EAAG,EAAG,CAAC,EAAI,CAAE,EAClB,CAAE,EAAG,EAAI,EAAG,EAAG,CAAC,CAAE,EAClB,CAAE,EAAG,EAAG,EAAG,CAAC,EAAI,CAAE,EACnB,CACK,EAAW,EAA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","sources":["<anon>","node_modules/mermaid/dist/flowDiagram-66a62f08.js","node_modules/dagre-d3-es/src/index.js","node_modules/dagre-d3-es/src/dagre-js/render.js","node_modules/dagre-d3-es/src/dagre-js/arrows.js","node_modules/dagre-d3-es/src/dagre-js/util.js","node_modules/dagre-d3-es/src/dagre-js/create-clusters.js","node_modules/dagre-d3-es/src/dagre-js/label/add-label.js","node_modules/dagre-d3-es/src/dagre-js/label/add-html-label.js","node_modules/dagre-d3-es/src/dagre-js/label/add-svg-label.js","node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js","node_modules/dagre-d3-es/src/dagre-js/create-edge-labels.js","node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-node.js","node_modules/dagre-d3-es/src/dagre-js/create-nodes.js","node_modules/dagre-d3-es/src/dagre-js/position-clusters.js","node_modules/dagre-d3-es/src/dagre-js/position-edge-labels.js","node_modules/dagre-d3-es/src/dagre-js/position-nodes.js","node_modules/dagre-d3-es/src/dagre-js/shapes.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-circle.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-ellipse.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-rect.js","node_modules/dagre-d3-es/src/dagre-js/intersect/index.js","node_modules/mermaid/dist/styles-c10674c1.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"c19HC\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"diagram\", ()=>diagram);\nvar _flowDb956E92F1Js = require(\"./flowDb-956e92f1.js\");\nvar _indexJs = require(\"dagre-d3-es/src/graphlib/index.js\");\nvar _d3 = require(\"d3\");\nvar _mermaidB5860B54Js = require(\"./mermaid-b5860b54.js\");\nvar _dagreD3Es = require(\"dagre-d3-es\");\nvar _utilJs = require(\"dagre-d3-es/src/dagre-js/util.js\");\nvar _addHtmlLabelJs = require(\"dagre-d3-es/src/dagre-js/label/add-html-label.js\");\nvar _intersectPolygonJs = require(\"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js\");\nvar _intersectRectJs = require(\"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js\");\nvar _stylesC10674C1Js = require(\"./styles-c10674c1.js\");\nvar _tsDedent = require(\"ts-dedent\");\nvar _dayjs = require(\"dayjs\");\nvar _sanitizeUrl = require(\"@braintree/sanitize-url\");\nvar _dompurify = require(\"dompurify\");\nvar _khroma = require(\"khroma\");\nvar _memoizeJs = require(\"lodash-es/memoize.js\");\nvar _mergeJs = require(\"lodash-es/merge.js\");\nvar _stylis = require(\"stylis\");\nvar _isEmptyJs = require(\"lodash-es/isEmpty.js\");\nvar _index3862675EJs = require(\"./index-3862675e.js\");\nvar _indexJs1 = require(\"dagre-d3-es/src/dagre/index.js\");\nvar _jsonJs = require(\"dagre-d3-es/src/graphlib/json.js\");\nvar _edgesE0Da2A9EJs = require(\"./edges-e0da2a9e.js\");\nvar _createText2E5E7Dd3Js = require(\"./createText-2e5e7dd3.js\");\nvar _mdastUtilFromMarkdown = require(\"mdast-util-from-markdown\");\nfunction question(parent, bbox, node) {\n    const w = bbox.width;\n    const h = bbox.height;\n    const s = (w + h) * 0.9;\n    const points = [\n        {\n            x: s / 2,\n            y: 0\n        },\n        {\n            x: s,\n            y: -s / 2\n        },\n        {\n            x: s / 2,\n            y: -s\n        },\n        {\n            x: 0,\n            y: -s / 2\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, s, s, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction hexagon(parent, bbox, node) {\n    const f = 4;\n    const h = bbox.height;\n    const m = h / f;\n    const w = bbox.width + 2 * m;\n    const points = [\n        {\n            x: m,\n            y: 0\n        },\n        {\n            x: w - m,\n            y: 0\n        },\n        {\n            x: w,\n            y: -h / 2\n        },\n        {\n            x: w - m,\n            y: -h\n        },\n        {\n            x: m,\n            y: -h\n        },\n        {\n            x: 0,\n            y: -h / 2\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, w, h, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction rect_left_inv_arrow(parent, bbox, node) {\n    const w = bbox.width;\n    const h = bbox.height;\n    const points = [\n        {\n            x: -h / 2,\n            y: 0\n        },\n        {\n            x: w,\n            y: 0\n        },\n        {\n            x: w,\n            y: -h\n        },\n        {\n            x: -h / 2,\n            y: -h\n        },\n        {\n            x: 0,\n            y: -h / 2\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, w, h, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction lean_right(parent, bbox, node) {\n    const w = bbox.width;\n    const h = bbox.height;\n    const points = [\n        {\n            x: -2 * h / 6,\n            y: 0\n        },\n        {\n            x: w - h / 6,\n            y: 0\n        },\n        {\n            x: w + 2 * h / 6,\n            y: -h\n        },\n        {\n            x: h / 6,\n            y: -h\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, w, h, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction lean_left(parent, bbox, node) {\n    const w = bbox.width;\n    const h = bbox.height;\n    const points = [\n        {\n            x: 2 * h / 6,\n            y: 0\n        },\n        {\n            x: w + h / 6,\n            y: 0\n        },\n        {\n            x: w - 2 * h / 6,\n            y: -h\n        },\n        {\n            x: -h / 6,\n            y: -h\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, w, h, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction trapezoid(parent, bbox, node) {\n    const w = bbox.width;\n    const h = bbox.height;\n    const points = [\n        {\n            x: -2 * h / 6,\n            y: 0\n        },\n        {\n            x: w + 2 * h / 6,\n            y: 0\n        },\n        {\n            x: w - h / 6,\n            y: -h\n        },\n        {\n            x: h / 6,\n            y: -h\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, w, h, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction inv_trapezoid(parent, bbox, node) {\n    const w = bbox.width;\n    const h = bbox.height;\n    const points = [\n        {\n            x: h / 6,\n            y: 0\n        },\n        {\n            x: w - h / 6,\n            y: 0\n        },\n        {\n            x: w + 2 * h / 6,\n            y: -h\n        },\n        {\n            x: -2 * h / 6,\n            y: -h\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, w, h, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction rect_right_inv_arrow(parent, bbox, node) {\n    const w = bbox.width;\n    const h = bbox.height;\n    const points = [\n        {\n            x: 0,\n            y: 0\n        },\n        {\n            x: w + h / 2,\n            y: 0\n        },\n        {\n            x: w,\n            y: -h / 2\n        },\n        {\n            x: w + h / 2,\n            y: -h\n        },\n        {\n            x: 0,\n            y: -h\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, w, h, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction stadium(parent, bbox, node) {\n    const h = bbox.height;\n    const w = bbox.width + h / 4;\n    const shapeSvg = parent.insert(\"rect\", \":first-child\").attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\n    node.intersect = function(point) {\n        return (0, _intersectRectJs.intersectRect)(node, point);\n    };\n    return shapeSvg;\n}\nfunction subroutine(parent, bbox, node) {\n    const w = bbox.width;\n    const h = bbox.height;\n    const points = [\n        {\n            x: 0,\n            y: 0\n        },\n        {\n            x: w,\n            y: 0\n        },\n        {\n            x: w,\n            y: -h\n        },\n        {\n            x: 0,\n            y: -h\n        },\n        {\n            x: 0,\n            y: 0\n        },\n        {\n            x: -8,\n            y: 0\n        },\n        {\n            x: w + 8,\n            y: 0\n        },\n        {\n            x: w + 8,\n            y: -h\n        },\n        {\n            x: -8,\n            y: -h\n        },\n        {\n            x: -8,\n            y: 0\n        }\n    ];\n    const shapeSvg = insertPolygonShape(parent, w, h, points);\n    node.intersect = function(point) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, point);\n    };\n    return shapeSvg;\n}\nfunction cylinder(parent, bbox, node) {\n    const w = bbox.width;\n    const rx = w / 2;\n    const ry = rx / (2.5 + w / 50);\n    const h = bbox.height + ry;\n    const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\n    const shapeSvg = parent.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\n    node.intersect = function(point) {\n        const pos = (0, _intersectRectJs.intersectRect)(node, point);\n        const x = pos.x - node.x;\n        if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n            let y = ry * ry * (1 - x * x / (rx * rx));\n            if (y != 0) y = Math.sqrt(y);\n            y = ry - y;\n            if (point.y - node.y > 0) y = -y;\n            pos.y += y;\n        }\n        return pos;\n    };\n    return shapeSvg;\n}\nfunction addToRender(render2) {\n    render2.shapes().question = question;\n    render2.shapes().hexagon = hexagon;\n    render2.shapes().stadium = stadium;\n    render2.shapes().subroutine = subroutine;\n    render2.shapes().cylinder = cylinder;\n    render2.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n    render2.shapes().lean_right = lean_right;\n    render2.shapes().lean_left = lean_left;\n    render2.shapes().trapezoid = trapezoid;\n    render2.shapes().inv_trapezoid = inv_trapezoid;\n    render2.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\nfunction addToRenderV2(addShape) {\n    addShape({\n        question\n    });\n    addShape({\n        hexagon\n    });\n    addShape({\n        stadium\n    });\n    addShape({\n        subroutine\n    });\n    addShape({\n        cylinder\n    });\n    addShape({\n        rect_left_inv_arrow\n    });\n    addShape({\n        lean_right\n    });\n    addShape({\n        lean_left\n    });\n    addShape({\n        trapezoid\n    });\n    addShape({\n        inv_trapezoid\n    });\n    addShape({\n        rect_right_inv_arrow\n    });\n}\nfunction insertPolygonShape(parent, w, h, points) {\n    return parent.insert(\"polygon\", \":first-child\").attr(\"points\", points.map(function(d) {\n        return d.x + \",\" + d.y;\n    }).join(\" \")).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\n}\nconst flowChartShapes = {\n    addToRender,\n    addToRenderV2\n};\nconst conf = {};\nconst setConf = function(cnf) {\n    const keys = Object.keys(cnf);\n    for (const key of keys)conf[key] = cnf[key];\n};\nconst addVertices = async function(vert, g, svgId, root, _doc, diagObj) {\n    const svg = !root ? (0, _d3.select)(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n    const doc = !_doc ? document : _doc;\n    const keys = Object.keys(vert);\n    for (const id of keys){\n        const vertex = vert[id];\n        let classStr = \"default\";\n        if (vertex.classes.length > 0) classStr = vertex.classes.join(\" \");\n        const styles = (0, _mermaidB5860B54Js.k)(vertex.styles);\n        let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n        let vertexNode;\n        if ((0, _mermaidB5860B54Js.m)((0, _mermaidB5860B54Js.c)().flowchart.htmlLabels)) {\n            const node = {\n                label: await (0, _mermaidB5860B54Js.r)(vertexText.replace(/fa[blrs]?:fa-[\\w-]+/g, // cspell:disable-line\n                (s)=>`<i class='${s.replace(\":\", \" \")}'></i>`), (0, _mermaidB5860B54Js.c)())\n            };\n            vertexNode = (0, _addHtmlLabelJs.addHtmlLabel)(svg, node).node();\n            vertexNode.parentNode.removeChild(vertexNode);\n        } else {\n            const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n            const rows = vertexText.split((0, _mermaidB5860B54Js.e).lineBreakRegex);\n            for (const row of rows){\n                const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n                tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n                tspan.setAttribute(\"dy\", \"1em\");\n                tspan.setAttribute(\"x\", \"1\");\n                tspan.textContent = row;\n                svgLabel.appendChild(tspan);\n            }\n            vertexNode = svgLabel;\n        }\n        let radius = 0;\n        let _shape = \"\";\n        switch(vertex.type){\n            case \"round\":\n                radius = 5;\n                _shape = \"rect\";\n                break;\n            case \"square\":\n                _shape = \"rect\";\n                break;\n            case \"diamond\":\n                _shape = \"question\";\n                break;\n            case \"hexagon\":\n                _shape = \"hexagon\";\n                break;\n            case \"odd\":\n                _shape = \"rect_left_inv_arrow\";\n                break;\n            case \"lean_right\":\n                _shape = \"lean_right\";\n                break;\n            case \"lean_left\":\n                _shape = \"lean_left\";\n                break;\n            case \"trapezoid\":\n                _shape = \"trapezoid\";\n                break;\n            case \"inv_trapezoid\":\n                _shape = \"inv_trapezoid\";\n                break;\n            case \"odd_right\":\n                _shape = \"rect_left_inv_arrow\";\n                break;\n            case \"circle\":\n                _shape = \"circle\";\n                break;\n            case \"ellipse\":\n                _shape = \"ellipse\";\n                break;\n            case \"stadium\":\n                _shape = \"stadium\";\n                break;\n            case \"subroutine\":\n                _shape = \"subroutine\";\n                break;\n            case \"cylinder\":\n                _shape = \"cylinder\";\n                break;\n            case \"group\":\n                _shape = \"rect\";\n                break;\n            default:\n                _shape = \"rect\";\n        }\n        (0, _mermaidB5860B54Js.l).warn(\"Adding node\", vertex.id, vertex.domId);\n        g.setNode(diagObj.db.lookUpDomId(vertex.id), {\n            labelType: \"svg\",\n            labelStyle: styles.labelStyle,\n            shape: _shape,\n            label: vertexNode,\n            rx: radius,\n            ry: radius,\n            class: classStr,\n            style: styles.style,\n            id: diagObj.db.lookUpDomId(vertex.id)\n        });\n    }\n};\nconst addEdges = async function(edges, g, diagObj) {\n    let cnt = 0;\n    let defaultStyle;\n    let defaultLabelStyle;\n    if (edges.defaultStyle !== void 0) {\n        const defaultStyles = (0, _mermaidB5860B54Js.k)(edges.defaultStyle);\n        defaultStyle = defaultStyles.style;\n        defaultLabelStyle = defaultStyles.labelStyle;\n    }\n    for (const edge of edges){\n        cnt++;\n        const linkId = \"L-\" + edge.start + \"-\" + edge.end;\n        const linkNameStart = \"LS-\" + edge.start;\n        const linkNameEnd = \"LE-\" + edge.end;\n        const edgeData = {};\n        if (edge.type === \"arrow_open\") edgeData.arrowhead = \"none\";\n        else edgeData.arrowhead = \"normal\";\n        let style = \"\";\n        let labelStyle = \"\";\n        if (edge.style !== void 0) {\n            const styles = (0, _mermaidB5860B54Js.k)(edge.style);\n            style = styles.style;\n            labelStyle = styles.labelStyle;\n        } else switch(edge.stroke){\n            case \"normal\":\n                style = \"fill:none\";\n                if (defaultStyle !== void 0) style = defaultStyle;\n                if (defaultLabelStyle !== void 0) labelStyle = defaultLabelStyle;\n                break;\n            case \"dotted\":\n                style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n                break;\n            case \"thick\":\n                style = \" stroke-width: 3.5px;fill:none\";\n                break;\n        }\n        edgeData.style = style;\n        edgeData.labelStyle = labelStyle;\n        if (edge.interpolate !== void 0) edgeData.curve = (0, _mermaidB5860B54Js.n)(edge.interpolate, (0, _d3.curveLinear));\n        else if (edges.defaultInterpolate !== void 0) edgeData.curve = (0, _mermaidB5860B54Js.n)(edges.defaultInterpolate, (0, _d3.curveLinear));\n        else edgeData.curve = (0, _mermaidB5860B54Js.n)(conf.curve, (0, _d3.curveLinear));\n        if (edge.text === void 0) {\n            if (edge.style !== void 0) edgeData.arrowheadStyle = \"fill: #333\";\n        } else {\n            edgeData.arrowheadStyle = \"fill: #333\";\n            edgeData.labelpos = \"c\";\n            if ((0, _mermaidB5860B54Js.m)((0, _mermaidB5860B54Js.c)().flowchart.htmlLabels)) {\n                edgeData.labelType = \"html\";\n                edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${edgeData.labelStyle}\">${await (0, _mermaidB5860B54Js.r)(edge.text.replace(/fa[blrs]?:fa-[\\w-]+/g, // cspell:disable-line\n                (s)=>`<i class='${s.replace(\":\", \" \")}'></i>`), (0, _mermaidB5860B54Js.c)())}</span>`;\n            } else {\n                edgeData.labelType = \"text\";\n                edgeData.label = edge.text.replace((0, _mermaidB5860B54Js.e).lineBreakRegex, \"\\n\");\n                if (edge.style === void 0) edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n                edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n            }\n        }\n        edgeData.id = linkId;\n        edgeData.class = linkNameStart + \" \" + linkNameEnd;\n        edgeData.minlen = edge.length || 1;\n        g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\n    }\n};\nconst getClasses = function(text, diagObj) {\n    (0, _mermaidB5860B54Js.l).info(\"Extracting classes\");\n    return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n    (0, _mermaidB5860B54Js.l).info(\"Drawing flowchart\");\n    const { securityLevel, flowchart: conf2 } = (0, _mermaidB5860B54Js.c)();\n    let sandboxElement;\n    if (securityLevel === \"sandbox\") sandboxElement = (0, _d3.select)(\"#i\" + id);\n    const root = securityLevel === \"sandbox\" ? (0, _d3.select)(sandboxElement.nodes()[0].contentDocument.body) : (0, _d3.select)(\"body\");\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    let dir = diagObj.db.getDirection();\n    if (dir === void 0) dir = \"TD\";\n    const nodeSpacing = conf2.nodeSpacing || 50;\n    const rankSpacing = conf2.rankSpacing || 50;\n    const g = new _indexJs.Graph({\n        multigraph: true,\n        compound: true\n    }).setGraph({\n        rankdir: dir,\n        nodesep: nodeSpacing,\n        ranksep: rankSpacing,\n        marginx: 8,\n        marginy: 8\n    }).setDefaultEdgeLabel(function() {\n        return {};\n    });\n    let subG;\n    const subGraphs = diagObj.db.getSubGraphs();\n    for(let i2 = subGraphs.length - 1; i2 >= 0; i2--){\n        subG = subGraphs[i2];\n        diagObj.db.addVertex(subG.id, subG.title, \"group\", void 0, subG.classes);\n    }\n    const vert = diagObj.db.getVertices();\n    (0, _mermaidB5860B54Js.l).warn(\"Get vertices\", vert);\n    const edges = diagObj.db.getEdges();\n    let i = 0;\n    for(i = subGraphs.length - 1; i >= 0; i--){\n        subG = subGraphs[i];\n        (0, _d3.selectAll)(\"cluster\").append(\"text\");\n        for(let j = 0; j < subG.nodes.length; j++){\n            (0, _mermaidB5860B54Js.l).warn(\"Setting subgraph\", subG.nodes[j], diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n            g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n        }\n    }\n    await addVertices(vert, g, id, root, doc, diagObj);\n    await addEdges(edges, g, diagObj);\n    const render$1 = new (0, _dagreD3Es.render)();\n    flowChartShapes.addToRender(render$1);\n    render$1.arrows().none = function normal(parent, id2, edge, type) {\n        const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n        const path = marker.append(\"path\").attr(\"d\", \"M 0 0 L 0 0 L 0 0 z\");\n        (0, _utilJs.applyStyle)(path, edge[type + \"Style\"]);\n    };\n    render$1.arrows().normal = function normal(parent, id2) {\n        const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n        marker.append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowheadPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n    };\n    const svg = root.select(`[id=\"${id}\"]`);\n    const element = root.select(\"#\" + id + \" g\");\n    render$1(element, g);\n    element.selectAll(\"g.node\").attr(\"title\", function() {\n        return diagObj.db.getTooltip(this.id);\n    });\n    diagObj.db.indexNodes(\"subGraph\" + i);\n    for(i = 0; i < subGraphs.length; i++){\n        subG = subGraphs[i];\n        if (subG.title !== \"undefined\") {\n            const clusterRects = doc.querySelectorAll(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect');\n            const clusterEl = doc.querySelectorAll(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]');\n            const xPos = clusterRects[0].x.baseVal.value;\n            const yPos = clusterRects[0].y.baseVal.value;\n            const _width = clusterRects[0].width.baseVal.value;\n            const cluster = (0, _d3.select)(clusterEl[0]);\n            const te = cluster.select(\".label\");\n            te.attr(\"transform\", `translate(${xPos + _width / 2}, ${yPos + 14})`);\n            te.attr(\"id\", id + \"Text\");\n            for(let j = 0; j < subG.classes.length; j++)clusterEl[0].classList.add(subG.classes[j]);\n        }\n    }\n    if (!conf2.htmlLabels) {\n        const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n        for (const label of labels){\n            const dim = label.getBBox();\n            const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n            rect.setAttribute(\"rx\", 0);\n            rect.setAttribute(\"ry\", 0);\n            rect.setAttribute(\"width\", dim.width);\n            rect.setAttribute(\"height\", dim.height);\n            label.insertBefore(rect, label.firstChild);\n        }\n    }\n    (0, _mermaidB5860B54Js.o)(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n    const keys = Object.keys(vert);\n    keys.forEach(function(key) {\n        const vertex = vert[key];\n        if (vertex.link) {\n            const node = root.select(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\n            if (node) {\n                const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n                link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n                link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n                link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n                if (securityLevel === \"sandbox\") link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n                else if (vertex.linkTarget) link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n                const linkNode = node.insert(function() {\n                    return link;\n                }, \":first-child\");\n                const shape = node.select(\".label-container\");\n                if (shape) linkNode.append(function() {\n                    return shape.node();\n                });\n                const label = node.select(\".label\");\n                if (label) linkNode.append(function() {\n                    return label.node();\n                });\n            }\n        }\n    });\n};\nconst flowRenderer = {\n    setConf,\n    addVertices,\n    addEdges,\n    getClasses,\n    draw\n};\nconst diagram = {\n    parser: (0, _flowDb956E92F1Js.p),\n    db: (0, _flowDb956E92F1Js.f),\n    renderer: (0, _stylesC10674C1Js.f),\n    styles: (0, _stylesC10674C1Js.a),\n    init: (cnf)=>{\n        if (!cnf.flowchart) cnf.flowchart = {};\n        cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        flowRenderer.setConf(cnf.flowchart);\n        (0, _flowDb956E92F1Js.f).clear();\n        (0, _flowDb956E92F1Js.f).setGen(\"gen-1\");\n    }\n};\n\n},{\"./flowDb-956e92f1.js\":\"iR0Sc\",\"dagre-d3-es/src/graphlib/index.js\":\"j6NXy\",\"d3\":\"ahWNw\",\"./mermaid-b5860b54.js\":\"2omMO\",\"dagre-d3-es\":\"dqI9j\",\"dagre-d3-es/src/dagre-js/util.js\":\"6pKrH\",\"dagre-d3-es/src/dagre-js/label/add-html-label.js\":\"1GkTV\",\"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js\":\"kXPOb\",\"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js\":\"9n7YW\",\"./styles-c10674c1.js\":\"356q0\",\"ts-dedent\":\"azOLv\",\"dayjs\":\"8F3kd\",\"@braintree/sanitize-url\":\"eIPUt\",\"dompurify\":\"5cPaM\",\"khroma\":\"kb6Zw\",\"lodash-es/memoize.js\":\"kSZfU\",\"lodash-es/merge.js\":\"ije1P\",\"stylis\":\"lfeQC\",\"lodash-es/isEmpty.js\":\"941eg\",\"./index-3862675e.js\":\"8RdUO\",\"dagre-d3-es/src/dagre/index.js\":\"9xp7T\",\"dagre-d3-es/src/graphlib/json.js\":\"5pdrN\",\"./edges-e0da2a9e.js\":\"3cEzO\",\"./createText-2e5e7dd3.js\":\"3A2vP\",\"mdast-util-from-markdown\":\"i9FLz\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"dqI9j\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"graphlib\", ()=>_indexJs);\nparcelHelpers.export(exports, \"intersect\", ()=>_indexJs1);\nparcelHelpers.export(exports, \"render\", ()=>(0, _renderJs.render));\nvar _renderJs = require(\"./dagre-js/render.js\");\nvar _indexJs = require(\"./graphlib/index.js\");\nvar _indexJs1 = require(\"./dagre-js/intersect/index.js\");\n\n},{\"./dagre-js/render.js\":\"1QIXV\",\"./graphlib/index.js\":\"j6NXy\",\"./dagre-js/intersect/index.js\":\"b2KkP\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"1QIXV\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"render\", ()=>render);\nvar _d3 = require(\"d3\");\nvar _lodashEs = require(\"lodash-es\");\nvar _indexJs = require(\"../dagre/index.js\");\nvar _arrowsJs = require(\"./arrows.js\");\nvar _createClustersJs = require(\"./create-clusters.js\");\nvar _createEdgeLabelsJs = require(\"./create-edge-labels.js\");\nvar _createEdgePathsJs = require(\"./create-edge-paths.js\");\nvar _createNodesJs = require(\"./create-nodes.js\");\nvar _positionClustersJs = require(\"./position-clusters.js\");\nvar _positionEdgeLabelsJs = require(\"./position-edge-labels.js\");\nvar _positionNodesJs = require(\"./position-nodes.js\");\nvar _shapesJs = require(\"./shapes.js\");\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n    var fn = function(svg, g) {\n        preProcessGraph(g);\n        var outputGroup = createOrSelectGroup(svg, 'output');\n        var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n        var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n        var edgeLabels = (0, _createEdgeLabelsJs.createEdgeLabels)(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n        var nodes = (0, _createNodesJs.createNodes)(createOrSelectGroup(outputGroup, 'nodes'), g, (0, _shapesJs.shapes));\n        (0, _indexJs.layout)(g);\n        (0, _positionNodesJs.positionNodes)(nodes, g);\n        (0, _positionEdgeLabelsJs.positionEdgeLabels)(edgeLabels, g);\n        (0, _createEdgePathsJs.createEdgePaths)(edgePathsGroup, g, (0, _arrowsJs.arrows));\n        var clusters = (0, _createClustersJs.createClusters)(clustersGroup, g);\n        (0, _positionClustersJs.positionClusters)(clusters, g);\n        postProcessGraph(g);\n    };\n    fn.createNodes = function(value) {\n        if (!arguments.length) return 0, _createNodesJs.createNodes;\n        (0, _createNodesJs.setCreateNodes)(value);\n        return fn;\n    };\n    fn.createClusters = function(value) {\n        if (!arguments.length) return 0, _createClustersJs.createClusters;\n        (0, _createClustersJs.setCreateClusters)(value);\n        return fn;\n    };\n    fn.createEdgeLabels = function(value) {\n        if (!arguments.length) return 0, _createEdgeLabelsJs.createEdgeLabels;\n        (0, _createEdgeLabelsJs.setCreateEdgeLabels)(value);\n        return fn;\n    };\n    fn.createEdgePaths = function(value) {\n        if (!arguments.length) return 0, _createEdgePathsJs.createEdgePaths;\n        (0, _createEdgePathsJs.setCreateEdgePaths)(value);\n        return fn;\n    };\n    fn.shapes = function(value) {\n        if (!arguments.length) return 0, _shapesJs.shapes;\n        (0, _shapesJs.setShapes)(value);\n        return fn;\n    };\n    fn.arrows = function(value) {\n        if (!arguments.length) return 0, _arrowsJs.arrows;\n        (0, _arrowsJs.setArrows)(value);\n        return fn;\n    };\n    return fn;\n}\nvar NODE_DEFAULT_ATTRS = {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    rx: 0,\n    ry: 0,\n    shape: 'rect'\n};\nvar EDGE_DEFAULT_ATTRS = {\n    arrowhead: 'normal',\n    curve: _d3.curveLinear\n};\nfunction preProcessGraph(g) {\n    g.nodes().forEach(function(v) {\n        var node = g.node(v);\n        if (!_lodashEs.has(node, 'label') && !g.children(v).length) node.label = v;\n        if (_lodashEs.has(node, 'paddingX')) _lodashEs.defaults(node, {\n            paddingLeft: node.paddingX,\n            paddingRight: node.paddingX\n        });\n        if (_lodashEs.has(node, 'paddingY')) _lodashEs.defaults(node, {\n            paddingTop: node.paddingY,\n            paddingBottom: node.paddingY\n        });\n        if (_lodashEs.has(node, 'padding')) _lodashEs.defaults(node, {\n            paddingLeft: node.padding,\n            paddingRight: node.padding,\n            paddingTop: node.padding,\n            paddingBottom: node.padding\n        });\n        _lodashEs.defaults(node, NODE_DEFAULT_ATTRS);\n        _lodashEs.each([\n            'paddingLeft',\n            'paddingRight',\n            'paddingTop',\n            'paddingBottom'\n        ], function(k) {\n            node[k] = Number(node[k]);\n        });\n        // Save dimensions for restore during post-processing\n        if (_lodashEs.has(node, 'width')) node._prevWidth = node.width;\n        if (_lodashEs.has(node, 'height')) node._prevHeight = node.height;\n    });\n    g.edges().forEach(function(e) {\n        var edge = g.edge(e);\n        if (!_lodashEs.has(edge, 'label')) edge.label = '';\n        _lodashEs.defaults(edge, EDGE_DEFAULT_ATTRS);\n    });\n}\nfunction postProcessGraph(g) {\n    _lodashEs.each(g.nodes(), function(v) {\n        var node = g.node(v);\n        // Restore original dimensions\n        if (_lodashEs.has(node, '_prevWidth')) node.width = node._prevWidth;\n        else delete node.width;\n        if (_lodashEs.has(node, '_prevHeight')) node.height = node._prevHeight;\n        else delete node.height;\n        delete node._prevWidth;\n        delete node._prevHeight;\n    });\n}\nfunction createOrSelectGroup(root, name) {\n    var selection = root.select('g.' + name);\n    if (selection.empty()) selection = root.append('g').attr('class', name);\n    return selection;\n}\n\n},{\"d3\":\"ahWNw\",\"lodash-es\":\"h4a9d\",\"../dagre/index.js\":\"9xp7T\",\"./arrows.js\":\"kPGNC\",\"./create-clusters.js\":\"8BpD2\",\"./create-edge-labels.js\":\"9B5k9\",\"./create-edge-paths.js\":\"agdaz\",\"./create-nodes.js\":\"j2YEe\",\"./position-clusters.js\":\"hXK1F\",\"./position-edge-labels.js\":\"dXJtg\",\"./position-nodes.js\":\"9TC7v\",\"./shapes.js\":\"3kK7a\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"kPGNC\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"arrows\", ()=>arrows);\nparcelHelpers.export(exports, \"setArrows\", ()=>setArrows);\nvar _utilJs = require(\"./util.js\");\nvar arrows = {\n    normal,\n    vee,\n    undirected\n};\nfunction setArrows(value) {\n    arrows = value;\n}\nfunction normal(parent, id, edge, type) {\n    var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n    var path = marker.append('path').attr('d', 'M 0 0 L 10 5 L 0 10 z').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n    _utilJs.applyStyle(path, edge[type + 'Style']);\n    if (edge[type + 'Class']) path.attr('class', edge[type + 'Class']);\n}\nfunction vee(parent, id, edge, type) {\n    var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n    var path = marker.append('path').attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n    _utilJs.applyStyle(path, edge[type + 'Style']);\n    if (edge[type + 'Class']) path.attr('class', edge[type + 'Class']);\n}\nfunction undirected(parent, id, edge, type) {\n    var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n    var path = marker.append('path').attr('d', 'M 0 5 L 10 5').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n    _utilJs.applyStyle(path, edge[type + 'Style']);\n    if (edge[type + 'Class']) path.attr('class', edge[type + 'Class']);\n}\n\n},{\"./util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"6pKrH\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n// Public utility functions\nparcelHelpers.export(exports, \"isSubgraph\", ()=>isSubgraph);\nparcelHelpers.export(exports, \"edgeToId\", ()=>edgeToId);\nparcelHelpers.export(exports, \"applyStyle\", ()=>applyStyle);\nparcelHelpers.export(exports, \"applyClass\", ()=>applyClass);\nparcelHelpers.export(exports, \"applyTransition\", ()=>applyTransition);\nvar _lodashEs = require(\"lodash-es\");\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */ function isSubgraph(g, v) {\n    return !!g.children(v).length;\n}\nfunction edgeToId(e) {\n    return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n    return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\nfunction applyStyle(dom, styleFn) {\n    if (styleFn) dom.attr('style', styleFn);\n}\nfunction applyClass(dom, classFn, otherClasses) {\n    if (classFn) dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n}\nfunction applyTransition(selection, g) {\n    var graph = g.graph();\n    if (_lodashEs.isPlainObject(graph)) {\n        var transition = graph.transition;\n        if (_lodashEs.isFunction(transition)) return transition(selection);\n    }\n    return selection;\n}\n\n},{\"lodash-es\":\"h4a9d\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"8BpD2\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"createClusters\", ()=>createClusters);\nparcelHelpers.export(exports, \"setCreateClusters\", ()=>setCreateClusters);\nvar _d3 = require(\"d3\");\nvar _addLabelJs = require(\"./label/add-label.js\");\nvar _utilJs = require(\"./util.js\");\nvar createClusters = function(selection, g) {\n    var clusters = g.nodes().filter(function(v) {\n        return _utilJs.isSubgraph(g, v);\n    });\n    var svgClusters = selection.selectAll('g.cluster').data(clusters, function(v) {\n        return v;\n    });\n    _utilJs.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n    var enterSelection = svgClusters.enter().append('g').attr('class', 'cluster').attr('id', function(v) {\n        var node = g.node(v);\n        return node.id;\n    }).style('opacity', 0).each(function(v) {\n        var node = g.node(v);\n        var thisGroup = _d3.select(this);\n        _d3.select(this).append('rect');\n        var labelGroup = thisGroup.append('g').attr('class', 'label');\n        (0, _addLabelJs.addLabel)(labelGroup, node, node.clusterLabelPos);\n    });\n    svgClusters = svgClusters.merge(enterSelection);\n    svgClusters = _utilJs.applyTransition(svgClusters, g).style('opacity', 1);\n    svgClusters.selectAll('rect').each(function(c) {\n        var node = g.node(c);\n        var domCluster = _d3.select(this);\n        _utilJs.applyStyle(domCluster, node.style);\n    });\n    return svgClusters;\n};\nfunction setCreateClusters(value) {\n    createClusters = value;\n}\n\n},{\"d3\":\"ahWNw\",\"./label/add-label.js\":\"aP5G6\",\"./util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"aP5G6\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"addLabel\", ()=>addLabel);\nvar _addHtmlLabelJs = require(\"./add-html-label.js\");\nvar _addSvgLabelJs = require(\"./add-svg-label.js\");\nvar _addTextLabelJs = require(\"./add-text-label.js\");\nfunction addLabel(root, node, location) {\n    var label = node.label;\n    var labelSvg = root.append('g');\n    // Allow the label to be a string, a function that returns a DOM element, or\n    // a DOM element itself.\n    if (node.labelType === 'svg') (0, _addSvgLabelJs.addSVGLabel)(labelSvg, node);\n    else if (typeof label !== 'string' || node.labelType === 'html') (0, _addHtmlLabelJs.addHtmlLabel)(labelSvg, node);\n    else (0, _addTextLabelJs.addTextLabel)(labelSvg, node);\n    var labelBBox = labelSvg.node().getBBox();\n    var y;\n    switch(location){\n        case 'top':\n            y = -node.height / 2;\n            break;\n        case 'bottom':\n            y = node.height / 2 - labelBBox.height;\n            break;\n        default:\n            y = -labelBBox.height / 2;\n    }\n    labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n    return labelSvg;\n}\n\n},{\"./add-html-label.js\":\"1GkTV\",\"./add-svg-label.js\":\"kbN0z\",\"./add-text-label.js\":\"i8olT\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"1GkTV\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"addHtmlLabel\", ()=>addHtmlLabel);\nvar _utilJs = require(\"../util.js\");\nfunction addHtmlLabel(root, node) {\n    var fo = root.append('foreignObject').attr('width', '100000');\n    var div = fo.append('xhtml:div');\n    div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n    var label = node.label;\n    switch(typeof label){\n        case 'function':\n            div.insert(label);\n            break;\n        case 'object':\n            // Currently we assume this is a DOM object.\n            div.insert(function() {\n                return label;\n            });\n            break;\n        default:\n            div.html(label);\n    }\n    _utilJs.applyStyle(div, node.labelStyle);\n    div.style('display', 'inline-block');\n    // Fix for firefox\n    div.style('white-space', 'nowrap');\n    var client = div.node().getBoundingClientRect();\n    fo.attr('width', client.width).attr('height', client.height);\n    return fo;\n}\n\n},{\"../util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"kbN0z\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"addSVGLabel\", ()=>addSVGLabel);\nvar _utilJs = require(\"../util.js\");\nfunction addSVGLabel(root, node) {\n    var domNode = root;\n    domNode.node().appendChild(node.label);\n    _utilJs.applyStyle(domNode, node.labelStyle);\n    return domNode;\n}\n\n},{\"../util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"i8olT\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"addTextLabel\", ()=>addTextLabel);\nvar _utilJs = require(\"../util.js\");\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */ function addTextLabel(root, node) {\n    var domNode = root.append('text');\n    var lines = processEscapeSequences(node.label).split('\\n');\n    for(var i = 0; i < lines.length; i++)domNode.append('tspan').attr('xml:space', 'preserve').attr('dy', '1em').attr('x', '1').text(lines[i]);\n    _utilJs.applyStyle(domNode, node.labelStyle);\n    return domNode;\n}\nfunction processEscapeSequences(text) {\n    var newText = '';\n    var escaped = false;\n    var ch;\n    for(var i = 0; i < text.length; ++i){\n        ch = text[i];\n        if (escaped) {\n            switch(ch){\n                case 'n':\n                    newText += '\\n';\n                    break;\n                default:\n                    newText += ch;\n            }\n            escaped = false;\n        } else if (ch === '\\\\') escaped = true;\n        else newText += ch;\n    }\n    return newText;\n}\n\n},{\"../util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"9B5k9\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"createEdgeLabels\", ()=>createEdgeLabels);\nparcelHelpers.export(exports, \"setCreateEdgeLabels\", ()=>setCreateEdgeLabels);\nvar _d3 = require(\"d3\");\nvar _lodashEs = require(\"lodash-es\");\nvar _addLabelJs = require(\"./label/add-label.js\");\nvar _utilJs = require(\"./util.js\");\nlet createEdgeLabels = function(selection, g) {\n    var svgEdgeLabels = selection.selectAll('g.edgeLabel').data(g.edges(), function(e) {\n        return _utilJs.edgeToId(e);\n    }).classed('update', true);\n    svgEdgeLabels.exit().remove();\n    svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n    svgEdgeLabels = selection.selectAll('g.edgeLabel');\n    svgEdgeLabels.each(function(e) {\n        var root = _d3.select(this);\n        root.select('.label').remove();\n        var edge = g.edge(e);\n        var label = (0, _addLabelJs.addLabel)(root, g.edge(e), 0).classed('label', true);\n        var bbox = label.node().getBBox();\n        if (edge.labelId) label.attr('id', edge.labelId);\n        if (!_lodashEs.has(edge, 'width')) edge.width = bbox.width;\n        if (!_lodashEs.has(edge, 'height')) edge.height = bbox.height;\n    });\n    var exitSelection;\n    if (svgEdgeLabels.exit) exitSelection = svgEdgeLabels.exit();\n    else exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n    _utilJs.applyTransition(exitSelection, g).style('opacity', 0).remove();\n    return svgEdgeLabels;\n};\nfunction setCreateEdgeLabels(value) {\n    createEdgeLabels = value;\n}\n\n},{\"d3\":\"ahWNw\",\"lodash-es\":\"h4a9d\",\"./label/add-label.js\":\"aP5G6\",\"./util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"agdaz\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"createEdgePaths\", ()=>createEdgePaths);\nparcelHelpers.export(exports, \"setCreateEdgePaths\", ()=>setCreateEdgePaths);\nvar _d3 = require(\"d3\");\nvar _lodashEs = require(\"lodash-es\");\nvar _intersectNodeJs = require(\"./intersect/intersect-node.js\");\nvar _utilJs = require(\"./util.js\");\nvar createEdgePaths = function(selection, g, arrows) {\n    var previousPaths = selection.selectAll('g.edgePath').data(g.edges(), function(e) {\n        return _utilJs.edgeToId(e);\n    }).classed('update', true);\n    var newPaths = enter(previousPaths, g);\n    exit(previousPaths, g);\n    var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n    _utilJs.applyTransition(svgPaths, g).style('opacity', 1);\n    // Save DOM element in the path group, and set ID and class\n    svgPaths.each(function(e) {\n        var domEdge = _d3.select(this);\n        var edge = g.edge(e);\n        edge.elem = this;\n        if (edge.id) domEdge.attr('id', edge.id);\n        _utilJs.applyClass(domEdge, edge['class'], (domEdge.classed('update') ? 'update ' : '') + 'edgePath');\n    });\n    svgPaths.selectAll('path.path').each(function(e) {\n        var edge = g.edge(e);\n        edge.arrowheadId = _lodashEs.uniqueId('arrowhead');\n        var domEdge = _d3.select(this).attr('marker-end', function() {\n            return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n        }).style('fill', 'none');\n        _utilJs.applyTransition(domEdge, g).attr('d', function(e) {\n            return calcPoints(g, e);\n        });\n        _utilJs.applyStyle(domEdge, edge.style);\n    });\n    svgPaths.selectAll('defs *').remove();\n    svgPaths.selectAll('defs').each(function(e) {\n        var edge = g.edge(e);\n        var arrowhead = arrows[edge.arrowhead];\n        arrowhead(_d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n    });\n    return svgPaths;\n};\nfunction setCreateEdgePaths(value) {\n    createEdgePaths = value;\n}\nfunction makeFragmentRef(url, fragmentId) {\n    var baseUrl = url.split('#')[0];\n    return baseUrl + '#' + fragmentId;\n}\nfunction calcPoints(g, e) {\n    var edge = g.edge(e);\n    var tail = g.node(e.v);\n    var head = g.node(e.w);\n    var points = edge.points.slice(1, edge.points.length - 1);\n    points.unshift((0, _intersectNodeJs.intersectNode)(tail, points[0]));\n    points.push((0, _intersectNodeJs.intersectNode)(head, points[points.length - 1]));\n    return createLine(edge, points);\n}\nfunction createLine(edge, points) {\n    // @ts-expect-error\n    var line = (_d3.line || _d3.svg.line)().x(function(d) {\n        return d.x;\n    }).y(function(d) {\n        return d.y;\n    });\n    (line.curve || line.interpolate)(edge.curve);\n    return line(points);\n}\nfunction getCoords(elem) {\n    var bbox = elem.getBBox();\n    var matrix = elem.ownerSVGElement.getScreenCTM().inverse().multiply(elem.getScreenCTM()).translate(bbox.width / 2, bbox.height / 2);\n    return {\n        x: matrix.e,\n        y: matrix.f\n    };\n}\nfunction enter(svgPaths, g) {\n    var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n    svgPathsEnter.append('path').attr('class', 'path').attr('d', function(e) {\n        var edge = g.edge(e);\n        var sourceElem = g.node(e.v).elem;\n        var points = _lodashEs.range(edge.points.length).map(function() {\n            return getCoords(sourceElem);\n        });\n        return createLine(edge, points);\n    });\n    svgPathsEnter.append('defs');\n    return svgPathsEnter;\n}\nfunction exit(svgPaths, g) {\n    var svgPathExit = svgPaths.exit();\n    _utilJs.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n\n},{\"d3\":\"ahWNw\",\"lodash-es\":\"h4a9d\",\"./intersect/intersect-node.js\":\"jLKiC\",\"./util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"jLKiC\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"intersectNode\", ()=>intersectNode);\nfunction intersectNode(node, point) {\n    return node.intersect(point);\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"j2YEe\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"createNodes\", ()=>createNodes);\nparcelHelpers.export(exports, \"setCreateNodes\", ()=>setCreateNodes);\nvar _d3 = require(\"d3\");\nvar _lodashEs = require(\"lodash-es\");\nvar _addLabelJs = require(\"./label/add-label.js\");\nvar _utilJs = require(\"./util.js\");\nvar createNodes = function(selection, g, shapes) {\n    var simpleNodes = g.nodes().filter(function(v) {\n        return !_utilJs.isSubgraph(g, v);\n    });\n    var svgNodes = selection.selectAll('g.node').data(simpleNodes, function(v) {\n        return v;\n    }).classed('update', true);\n    svgNodes.exit().remove();\n    svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n    svgNodes = selection.selectAll('g.node');\n    svgNodes.each(function(v) {\n        var node = g.node(v);\n        var thisGroup = _d3.select(this);\n        _utilJs.applyClass(thisGroup, node['class'], (thisGroup.classed('update') ? 'update ' : '') + 'node');\n        thisGroup.select('g.label').remove();\n        var labelGroup = thisGroup.append('g').attr('class', 'label');\n        var labelDom = (0, _addLabelJs.addLabel)(labelGroup, node);\n        var shape = shapes[node.shape];\n        var bbox = _lodashEs.pick(labelDom.node().getBBox(), 'width', 'height');\n        node.elem = this;\n        if (node.id) thisGroup.attr('id', node.id);\n        if (node.labelId) labelGroup.attr('id', node.labelId);\n        if (_lodashEs.has(node, 'width')) bbox.width = node.width;\n        if (_lodashEs.has(node, 'height')) bbox.height = node.height;\n        bbox.width += node.paddingLeft + node.paddingRight;\n        bbox.height += node.paddingTop + node.paddingBottom;\n        labelGroup.attr('transform', 'translate(' + (node.paddingLeft - node.paddingRight) / 2 + ',' + (node.paddingTop - node.paddingBottom) / 2 + ')');\n        var root = _d3.select(this);\n        root.select('.label-container').remove();\n        var shapeSvg = shape(root, bbox, node).classed('label-container', true);\n        _utilJs.applyStyle(shapeSvg, node.style);\n        var shapeBBox = shapeSvg.node().getBBox();\n        node.width = shapeBBox.width;\n        node.height = shapeBBox.height;\n    });\n    var exitSelection;\n    if (svgNodes.exit) exitSelection = svgNodes.exit();\n    else exitSelection = svgNodes.selectAll(null); // empty selection\n    _utilJs.applyTransition(exitSelection, g).style('opacity', 0).remove();\n    return svgNodes;\n};\nfunction setCreateNodes(value) {\n    createNodes = value;\n}\n\n},{\"d3\":\"ahWNw\",\"lodash-es\":\"h4a9d\",\"./label/add-label.js\":\"aP5G6\",\"./util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"hXK1F\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"positionClusters\", ()=>positionClusters);\nvar _d3 = require(\"d3\");\nvar _utilJs = require(\"./util.js\");\nfunction positionClusters(selection, g) {\n    var created = selection.filter(function() {\n        return !_d3.select(this).classed('update');\n    });\n    function translate(v) {\n        var node = g.node(v);\n        return 'translate(' + node.x + ',' + node.y + ')';\n    }\n    created.attr('transform', translate);\n    _utilJs.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n    _utilJs.applyTransition(created.selectAll('rect'), g).attr('width', function(v) {\n        return g.node(v).width;\n    }).attr('height', function(v) {\n        return g.node(v).height;\n    }).attr('x', function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n    }).attr('y', function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n    });\n}\n\n},{\"d3\":\"ahWNw\",\"./util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"dXJtg\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"positionEdgeLabels\", ()=>positionEdgeLabels);\nvar _d3 = require(\"d3\");\nvar _lodashEs = require(\"lodash-es\");\nvar _utilJs = require(\"./util.js\");\nfunction positionEdgeLabels(selection, g) {\n    var created = selection.filter(function() {\n        return !_d3.select(this).classed('update');\n    });\n    function translate(e) {\n        var edge = g.edge(e);\n        return _lodashEs.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n    }\n    created.attr('transform', translate);\n    _utilJs.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n\n},{\"d3\":\"ahWNw\",\"lodash-es\":\"h4a9d\",\"./util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"9TC7v\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"positionNodes\", ()=>positionNodes);\nvar _d3 = require(\"d3\");\nvar _utilJs = require(\"./util.js\");\nfunction positionNodes(selection, g) {\n    var created = selection.filter(function() {\n        return !_d3.select(this).classed('update');\n    });\n    function translate(v) {\n        var node = g.node(v);\n        return 'translate(' + node.x + ',' + node.y + ')';\n    }\n    created.attr('transform', translate);\n    _utilJs.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n\n},{\"d3\":\"ahWNw\",\"./util.js\":\"6pKrH\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"3kK7a\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"shapes\", ()=>shapes);\nparcelHelpers.export(exports, \"setShapes\", ()=>setShapes);\nvar _intersectCircleJs = require(\"./intersect/intersect-circle.js\");\nvar _intersectEllipseJs = require(\"./intersect/intersect-ellipse.js\");\nvar _intersectPolygonJs = require(\"./intersect/intersect-polygon.js\");\nvar _intersectRectJs = require(\"./intersect/intersect-rect.js\");\nvar shapes = {\n    rect,\n    ellipse,\n    circle,\n    diamond\n};\nfunction setShapes(value) {\n    shapes = value;\n}\nfunction rect(parent, bbox, node) {\n    var shapeSvg = parent.insert('rect', ':first-child').attr('rx', node.rx).attr('ry', node.ry).attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('width', bbox.width).attr('height', bbox.height);\n    node.intersect = function(point) {\n        return (0, _intersectRectJs.intersectRect)(node, point);\n    };\n    return shapeSvg;\n}\nfunction ellipse(parent, bbox, node) {\n    var rx = bbox.width / 2;\n    var ry = bbox.height / 2;\n    var shapeSvg = parent.insert('ellipse', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('rx', rx).attr('ry', ry);\n    node.intersect = function(point) {\n        return (0, _intersectEllipseJs.intersectEllipse)(node, rx, ry, point);\n    };\n    return shapeSvg;\n}\nfunction circle(parent, bbox, node) {\n    var r = Math.max(bbox.width, bbox.height) / 2;\n    var shapeSvg = parent.insert('circle', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('r', r);\n    node.intersect = function(point) {\n        return (0, _intersectCircleJs.intersectCircle)(node, r, point);\n    };\n    return shapeSvg;\n}\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n    var w = bbox.width * Math.SQRT2 / 2;\n    var h = bbox.height * Math.SQRT2 / 2;\n    var points = [\n        {\n            x: 0,\n            y: -h\n        },\n        {\n            x: -w,\n            y: 0\n        },\n        {\n            x: 0,\n            y: h\n        },\n        {\n            x: w,\n            y: 0\n        }\n    ];\n    var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function(p) {\n        return p.x + ',' + p.y;\n    }).join(' '));\n    node.intersect = function(p) {\n        return (0, _intersectPolygonJs.intersectPolygon)(node, points, p);\n    };\n    return shapeSvg;\n}\n\n},{\"./intersect/intersect-circle.js\":\"6p7YI\",\"./intersect/intersect-ellipse.js\":\"gdi1G\",\"./intersect/intersect-polygon.js\":\"kXPOb\",\"./intersect/intersect-rect.js\":\"9n7YW\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"6p7YI\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"intersectCircle\", ()=>intersectCircle);\nvar _intersectEllipseJs = require(\"./intersect-ellipse.js\");\nfunction intersectCircle(node, rx, point) {\n    return (0, _intersectEllipseJs.intersectEllipse)(node, rx, rx, point);\n}\n\n},{\"./intersect-ellipse.js\":\"gdi1G\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"gdi1G\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"intersectEllipse\", ()=>intersectEllipse);\nfunction intersectEllipse(node, rx, ry, point) {\n    // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n    var cx = node.x;\n    var cy = node.y;\n    var px = cx - point.x;\n    var py = cy - point.y;\n    var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n    var dx = Math.abs(rx * ry * px / det);\n    if (point.x < cx) dx = -dx;\n    var dy = Math.abs(rx * ry * py / det);\n    if (point.y < cy) dy = -dy;\n    return {\n        x: cx + dx,\n        y: cy + dy\n    };\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"kXPOb\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"intersectPolygon\", ()=>intersectPolygon);\nvar _intersectLineJs = require(\"./intersect-line.js\");\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */ function intersectPolygon(node, polyPoints, point) {\n    var x1 = node.x;\n    var y1 = node.y;\n    var intersections = [];\n    var minX = Number.POSITIVE_INFINITY;\n    var minY = Number.POSITIVE_INFINITY;\n    polyPoints.forEach(function(entry) {\n        minX = Math.min(minX, entry.x);\n        minY = Math.min(minY, entry.y);\n    });\n    var left = x1 - node.width / 2 - minX;\n    var top = y1 - node.height / 2 - minY;\n    for(var i = 0; i < polyPoints.length; i++){\n        var p1 = polyPoints[i];\n        var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n        var intersect = (0, _intersectLineJs.intersectLine)(node, point, {\n            x: left + p1.x,\n            y: top + p1.y\n        }, {\n            x: left + p2.x,\n            y: top + p2.y\n        });\n        if (intersect) intersections.push(intersect);\n    }\n    if (!intersections.length) {\n        console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n        return node;\n    }\n    if (intersections.length > 1) // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n        var pdx = p.x - point.x;\n        var pdy = p.y - point.y;\n        var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n        var qdx = q.x - point.x;\n        var qdy = q.y - point.y;\n        var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n        return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n    return intersections[0];\n}\n\n},{\"./intersect-line.js\":\"2n5ml\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"2n5ml\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"intersectLine\", ()=>intersectLine);\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */ function intersectLine(p1, p2, q1, q2) {\n    // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n    // p7 and p473.\n    var a1, a2, b1, b2, c1, c2;\n    var r1, r2, r3, r4;\n    var denom, offset, num;\n    var x, y;\n    // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n    // b1 y + c1 = 0.\n    a1 = p2.y - p1.y;\n    b1 = p1.x - p2.x;\n    c1 = p2.x * p1.y - p1.x * p2.y;\n    // Compute r3 and r4.\n    r3 = a1 * q1.x + b1 * q1.y + c1;\n    r4 = a1 * q2.x + b1 * q2.y + c1;\n    // Check signs of r3 and r4. If both point 3 and point 4 lie on\n    // same side of line 1, the line segments do not intersect.\n    if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) return;\n    // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n    a2 = q2.y - q1.y;\n    b2 = q1.x - q2.x;\n    c2 = q2.x * q1.y - q1.x * q2.y;\n    // Compute r1 and r2\n    r1 = a2 * p1.x + b2 * p1.y + c2;\n    r2 = a2 * p2.x + b2 * p2.y + c2;\n    // Check signs of r1 and r2. If both point 1 and point 2 lie\n    // on same side of second line segment, the line segments do\n    // not intersect.\n    if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) return;\n    // Line segments intersect: compute intersection point.\n    denom = a1 * b2 - a2 * b1;\n    if (denom === 0) return;\n    offset = Math.abs(denom / 2);\n    // The denom/2 is to get rounding instead of truncating. It\n    // is added or subtracted to the numerator, depending upon the\n    // sign of the numerator.\n    num = b1 * c2 - b2 * c1;\n    x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n    num = a2 * c1 - a1 * c2;\n    y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n    return {\n        x: x,\n        y: y\n    };\n}\nfunction sameSign(r1, r2) {\n    return r1 * r2 > 0;\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"9n7YW\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"intersectRect\", ()=>intersectRect);\nfunction intersectRect(node, point) {\n    var x = node.x;\n    var y = node.y;\n    // Rectangle intersection algorithm from:\n    // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n    var dx = point.x - x;\n    var dy = point.y - y;\n    var w = node.width / 2;\n    var h = node.height / 2;\n    var sx, sy;\n    if (Math.abs(dy) * w > Math.abs(dx) * h) {\n        // Intersection is top or bottom of rect.\n        if (dy < 0) h = -h;\n        sx = dy === 0 ? 0 : h * dx / dy;\n        sy = h;\n    } else {\n        // Intersection is left or right of rect.\n        if (dx < 0) w = -w;\n        sx = w;\n        sy = dx === 0 ? 0 : w * dy / dx;\n    }\n    return {\n        x: x + sx,\n        y: y + sy\n    };\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"b2KkP\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"node\", ()=>_intersectNodeJs);\nparcelHelpers.export(exports, \"circle\", ()=>_intersectCircleJs);\nparcelHelpers.export(exports, \"ellipse\", ()=>_intersectEllipseJs);\nparcelHelpers.export(exports, \"polygon\", ()=>_intersectPolygonJs);\nparcelHelpers.export(exports, \"rect\", ()=>_intersectRectJs);\nvar _intersectNodeJs = require(\"./intersect-node.js\");\nvar _intersectCircleJs = require(\"./intersect-circle.js\");\nvar _intersectEllipseJs = require(\"./intersect-ellipse.js\");\nvar _intersectPolygonJs = require(\"./intersect-polygon.js\");\nvar _intersectRectJs = require(\"./intersect-rect.js\");\n\n},{\"./intersect-node.js\":\"jLKiC\",\"./intersect-circle.js\":\"6p7YI\",\"./intersect-ellipse.js\":\"gdi1G\",\"./intersect-polygon.js\":\"kXPOb\",\"./intersect-rect.js\":\"9n7YW\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"356q0\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"a\", ()=>flowStyles);\nparcelHelpers.export(exports, \"f\", ()=>flowRendererV2);\nvar _indexJs = require(\"dagre-d3-es/src/graphlib/index.js\");\nvar _d3 = require(\"d3\");\nvar _mermaidB5860B54Js = require(\"./mermaid-b5860b54.js\");\nvar _index3862675EJs = require(\"./index-3862675e.js\");\nvar _addHtmlLabelJs = require(\"dagre-d3-es/src/dagre-js/label/add-html-label.js\");\nvar _khroma = require(\"khroma\");\nconst conf = {};\nconst setConf = function(cnf) {\n    const keys = Object.keys(cnf);\n    for (const key of keys)conf[key] = cnf[key];\n};\nconst addVertices = async function(vert, g, svgId, root, doc, diagObj) {\n    const svg = root.select(`[id=\"${svgId}\"]`);\n    const keys = Object.keys(vert);\n    for (const id of keys){\n        const vertex = vert[id];\n        let classStr = \"default\";\n        if (vertex.classes.length > 0) classStr = vertex.classes.join(\" \");\n        classStr = classStr + \" flowchart-label\";\n        const styles = (0, _mermaidB5860B54Js.k)(vertex.styles);\n        let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n        let vertexNode;\n        (0, _mermaidB5860B54Js.l).info(\"vertex\", vertex, vertex.labelType);\n        if (vertex.labelType === \"markdown\") (0, _mermaidB5860B54Js.l).info(\"vertex\", vertex, vertex.labelType);\n        else if ((0, _mermaidB5860B54Js.m)((0, _mermaidB5860B54Js.c)().flowchart.htmlLabels)) {\n            const node = {\n                label: vertexText\n            };\n            vertexNode = (0, _addHtmlLabelJs.addHtmlLabel)(svg, node).node();\n            vertexNode.parentNode.removeChild(vertexNode);\n        } else {\n            const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n            const rows = vertexText.split((0, _mermaidB5860B54Js.e).lineBreakRegex);\n            for (const row of rows){\n                const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n                tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n                tspan.setAttribute(\"dy\", \"1em\");\n                tspan.setAttribute(\"x\", \"1\");\n                tspan.textContent = row;\n                svgLabel.appendChild(tspan);\n            }\n            vertexNode = svgLabel;\n        }\n        let radius = 0;\n        let _shape = \"\";\n        switch(vertex.type){\n            case \"round\":\n                radius = 5;\n                _shape = \"rect\";\n                break;\n            case \"square\":\n                _shape = \"rect\";\n                break;\n            case \"diamond\":\n                _shape = \"question\";\n                break;\n            case \"hexagon\":\n                _shape = \"hexagon\";\n                break;\n            case \"odd\":\n                _shape = \"rect_left_inv_arrow\";\n                break;\n            case \"lean_right\":\n                _shape = \"lean_right\";\n                break;\n            case \"lean_left\":\n                _shape = \"lean_left\";\n                break;\n            case \"trapezoid\":\n                _shape = \"trapezoid\";\n                break;\n            case \"inv_trapezoid\":\n                _shape = \"inv_trapezoid\";\n                break;\n            case \"odd_right\":\n                _shape = \"rect_left_inv_arrow\";\n                break;\n            case \"circle\":\n                _shape = \"circle\";\n                break;\n            case \"ellipse\":\n                _shape = \"ellipse\";\n                break;\n            case \"stadium\":\n                _shape = \"stadium\";\n                break;\n            case \"subroutine\":\n                _shape = \"subroutine\";\n                break;\n            case \"cylinder\":\n                _shape = \"cylinder\";\n                break;\n            case \"group\":\n                _shape = \"rect\";\n                break;\n            case \"doublecircle\":\n                _shape = \"doublecircle\";\n                break;\n            default:\n                _shape = \"rect\";\n        }\n        const labelText = await (0, _mermaidB5860B54Js.r)(vertexText, (0, _mermaidB5860B54Js.c)());\n        g.setNode(vertex.id, {\n            labelStyle: styles.labelStyle,\n            shape: _shape,\n            labelText,\n            labelType: vertex.labelType,\n            rx: radius,\n            ry: radius,\n            class: classStr,\n            style: styles.style,\n            id: vertex.id,\n            link: vertex.link,\n            linkTarget: vertex.linkTarget,\n            tooltip: diagObj.db.getTooltip(vertex.id) || \"\",\n            domId: diagObj.db.lookUpDomId(vertex.id),\n            haveCallback: vertex.haveCallback,\n            width: vertex.type === \"group\" ? 500 : void 0,\n            dir: vertex.dir,\n            type: vertex.type,\n            props: vertex.props,\n            padding: (0, _mermaidB5860B54Js.c)().flowchart.padding\n        });\n        (0, _mermaidB5860B54Js.l).info(\"setNode\", {\n            labelStyle: styles.labelStyle,\n            labelType: vertex.labelType,\n            shape: _shape,\n            labelText,\n            rx: radius,\n            ry: radius,\n            class: classStr,\n            style: styles.style,\n            id: vertex.id,\n            domId: diagObj.db.lookUpDomId(vertex.id),\n            width: vertex.type === \"group\" ? 500 : void 0,\n            type: vertex.type,\n            dir: vertex.dir,\n            props: vertex.props,\n            padding: (0, _mermaidB5860B54Js.c)().flowchart.padding\n        });\n    }\n};\nconst addEdges = async function(edges, g, diagObj) {\n    (0, _mermaidB5860B54Js.l).info(\"abc78 edges = \", edges);\n    let cnt = 0;\n    let linkIdCnt = {};\n    let defaultStyle;\n    let defaultLabelStyle;\n    if (edges.defaultStyle !== void 0) {\n        const defaultStyles = (0, _mermaidB5860B54Js.k)(edges.defaultStyle);\n        defaultStyle = defaultStyles.style;\n        defaultLabelStyle = defaultStyles.labelStyle;\n    }\n    for (const edge of edges){\n        cnt++;\n        const linkIdBase = \"L-\" + edge.start + \"-\" + edge.end;\n        if (linkIdCnt[linkIdBase] === void 0) {\n            linkIdCnt[linkIdBase] = 0;\n            (0, _mermaidB5860B54Js.l).info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n        } else {\n            linkIdCnt[linkIdBase]++;\n            (0, _mermaidB5860B54Js.l).info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n        }\n        let linkId = linkIdBase + \"-\" + linkIdCnt[linkIdBase];\n        (0, _mermaidB5860B54Js.l).info(\"abc78 new link id to be used is\", linkIdBase, linkId, linkIdCnt[linkIdBase]);\n        const linkNameStart = \"LS-\" + edge.start;\n        const linkNameEnd = \"LE-\" + edge.end;\n        const edgeData = {\n            style: \"\",\n            labelStyle: \"\"\n        };\n        edgeData.minlen = edge.length || 1;\n        if (edge.type === \"arrow_open\") edgeData.arrowhead = \"none\";\n        else edgeData.arrowhead = \"normal\";\n        edgeData.arrowTypeStart = \"arrow_open\";\n        edgeData.arrowTypeEnd = \"arrow_open\";\n        switch(edge.type){\n            case \"double_arrow_cross\":\n                edgeData.arrowTypeStart = \"arrow_cross\";\n            case \"arrow_cross\":\n                edgeData.arrowTypeEnd = \"arrow_cross\";\n                break;\n            case \"double_arrow_point\":\n                edgeData.arrowTypeStart = \"arrow_point\";\n            case \"arrow_point\":\n                edgeData.arrowTypeEnd = \"arrow_point\";\n                break;\n            case \"double_arrow_circle\":\n                edgeData.arrowTypeStart = \"arrow_circle\";\n            case \"arrow_circle\":\n                edgeData.arrowTypeEnd = \"arrow_circle\";\n                break;\n        }\n        let style = \"\";\n        let labelStyle = \"\";\n        switch(edge.stroke){\n            case \"normal\":\n                style = \"fill:none;\";\n                if (defaultStyle !== void 0) style = defaultStyle;\n                if (defaultLabelStyle !== void 0) labelStyle = defaultLabelStyle;\n                edgeData.thickness = \"normal\";\n                edgeData.pattern = \"solid\";\n                break;\n            case \"dotted\":\n                edgeData.thickness = \"normal\";\n                edgeData.pattern = \"dotted\";\n                edgeData.style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n                break;\n            case \"thick\":\n                edgeData.thickness = \"thick\";\n                edgeData.pattern = \"solid\";\n                edgeData.style = \"stroke-width: 3.5px;fill:none;\";\n                break;\n            case \"invisible\":\n                edgeData.thickness = \"invisible\";\n                edgeData.pattern = \"solid\";\n                edgeData.style = \"stroke-width: 0;fill:none;\";\n                break;\n        }\n        if (edge.style !== void 0) {\n            const styles = (0, _mermaidB5860B54Js.k)(edge.style);\n            style = styles.style;\n            labelStyle = styles.labelStyle;\n        }\n        edgeData.style = edgeData.style += style;\n        edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n        if (edge.interpolate !== void 0) edgeData.curve = (0, _mermaidB5860B54Js.n)(edge.interpolate, (0, _d3.curveLinear));\n        else if (edges.defaultInterpolate !== void 0) edgeData.curve = (0, _mermaidB5860B54Js.n)(edges.defaultInterpolate, (0, _d3.curveLinear));\n        else edgeData.curve = (0, _mermaidB5860B54Js.n)(conf.curve, (0, _d3.curveLinear));\n        if (edge.text === void 0) {\n            if (edge.style !== void 0) edgeData.arrowheadStyle = \"fill: #333\";\n        } else {\n            edgeData.arrowheadStyle = \"fill: #333\";\n            edgeData.labelpos = \"c\";\n        }\n        edgeData.labelType = edge.labelType;\n        edgeData.label = await (0, _mermaidB5860B54Js.r)(edge.text.replace((0, _mermaidB5860B54Js.e).lineBreakRegex, \"\\n\"), (0, _mermaidB5860B54Js.c)());\n        if (edge.style === void 0) edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none;\";\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n        edgeData.id = linkId;\n        edgeData.classes = \"flowchart-link \" + linkNameStart + \" \" + linkNameEnd;\n        g.setEdge(edge.start, edge.end, edgeData, cnt);\n    }\n};\nconst getClasses = function(text, diagObj) {\n    return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n    (0, _mermaidB5860B54Js.l).info(\"Drawing flowchart\");\n    let dir = diagObj.db.getDirection();\n    if (dir === void 0) dir = \"TD\";\n    const { securityLevel, flowchart: conf2 } = (0, _mermaidB5860B54Js.c)();\n    const nodeSpacing = conf2.nodeSpacing || 50;\n    const rankSpacing = conf2.rankSpacing || 50;\n    let sandboxElement;\n    if (securityLevel === \"sandbox\") sandboxElement = (0, _d3.select)(\"#i\" + id);\n    const root = securityLevel === \"sandbox\" ? (0, _d3.select)(sandboxElement.nodes()[0].contentDocument.body) : (0, _d3.select)(\"body\");\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const g = new _indexJs.Graph({\n        multigraph: true,\n        compound: true\n    }).setGraph({\n        rankdir: dir,\n        nodesep: nodeSpacing,\n        ranksep: rankSpacing,\n        marginx: 0,\n        marginy: 0\n    }).setDefaultEdgeLabel(function() {\n        return {};\n    });\n    let subG;\n    const subGraphs = diagObj.db.getSubGraphs();\n    (0, _mermaidB5860B54Js.l).info(\"Subgraphs - \", subGraphs);\n    for(let i2 = subGraphs.length - 1; i2 >= 0; i2--){\n        subG = subGraphs[i2];\n        (0, _mermaidB5860B54Js.l).info(\"Subgraph - \", subG);\n        diagObj.db.addVertex(subG.id, {\n            text: subG.title,\n            type: subG.labelType\n        }, \"group\", void 0, subG.classes, subG.dir);\n    }\n    const vert = diagObj.db.getVertices();\n    const edges = diagObj.db.getEdges();\n    (0, _mermaidB5860B54Js.l).info(\"Edges\", edges);\n    let i = 0;\n    for(i = subGraphs.length - 1; i >= 0; i--){\n        subG = subGraphs[i];\n        (0, _d3.selectAll)(\"cluster\").append(\"text\");\n        for(let j = 0; j < subG.nodes.length; j++){\n            (0, _mermaidB5860B54Js.l).info(\"Setting up subgraphs\", subG.nodes[j], subG.id);\n            g.setParent(subG.nodes[j], subG.id);\n        }\n    }\n    await addVertices(vert, g, id, root, doc, diagObj);\n    await addEdges(edges, g);\n    const svg = root.select(`[id=\"${id}\"]`);\n    const element = root.select(\"#\" + id + \" g\");\n    await (0, _index3862675EJs.r)(element, g, [\n        \"point\",\n        \"circle\",\n        \"cross\"\n    ], \"flowchart\", id);\n    (0, _mermaidB5860B54Js.u).insertTitle(svg, \"flowchartTitleText\", conf2.titleTopMargin, diagObj.db.getDiagramTitle());\n    (0, _mermaidB5860B54Js.o)(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n    diagObj.db.indexNodes(\"subGraph\" + i);\n    if (!conf2.htmlLabels) {\n        const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n        for (const label of labels){\n            const dim = label.getBBox();\n            const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n            rect.setAttribute(\"rx\", 0);\n            rect.setAttribute(\"ry\", 0);\n            rect.setAttribute(\"width\", dim.width);\n            rect.setAttribute(\"height\", dim.height);\n            label.insertBefore(rect, label.firstChild);\n        }\n    }\n    const keys = Object.keys(vert);\n    keys.forEach(function(key) {\n        const vertex = vert[key];\n        if (vertex.link) {\n            const node = (0, _d3.select)(\"#\" + id + ' [id=\"' + key + '\"]');\n            if (node) {\n                const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n                link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n                link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n                link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n                if (securityLevel === \"sandbox\") link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n                else if (vertex.linkTarget) link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n                const linkNode = node.insert(function() {\n                    return link;\n                }, \":first-child\");\n                const shape = node.select(\".label-container\");\n                if (shape) linkNode.append(function() {\n                    return shape.node();\n                });\n                const label = node.select(\".label\");\n                if (label) linkNode.append(function() {\n                    return label.node();\n                });\n            }\n        }\n    });\n};\nconst flowRendererV2 = {\n    setConf,\n    addVertices,\n    addEdges,\n    getClasses,\n    draw\n};\nconst fade = (color, opacity)=>{\n    const channel = _khroma.channel;\n    const r = channel(color, \"r\");\n    const g = channel(color, \"g\");\n    const b = channel(color, \"b\");\n    return _khroma.rgba(r, g, b, opacity);\n};\nconst getStyles = (options)=>`.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .katex path {\n    fill: #000;\n    stroke: #000;\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color: \n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\nconst flowStyles = getStyles;\n\n},{\"dagre-d3-es/src/graphlib/index.js\":\"j6NXy\",\"d3\":\"ahWNw\",\"./mermaid-b5860b54.js\":\"2omMO\",\"./index-3862675e.js\":\"8RdUO\",\"dagre-d3-es/src/dagre-js/label/add-html-label.js\":\"1GkTV\",\"khroma\":\"kb6Zw\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=flowDiagram-66a62f08.0fb69c2e.js.map\n","import { p as parser, f as flowDb } from \"./flowDb-956e92f1.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select, curveLinear, selectAll } from \"d3\";\nimport { k as getStylesFromArray, m as evaluate, c as getConfig, r as renderKatex, e as common, l as log, n as interpolateToCurve, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { render } from \"dagre-d3-es\";\nimport { applyStyle } from \"dagre-d3-es/src/dagre-js/util.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport { intersectPolygon } from \"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js\";\nimport { intersectRect } from \"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js\";\nimport { f as flowRendererV2, a as flowStyles } from \"./styles-c10674c1.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"./index-3862675e.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nfunction question(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const s = (w + h) * 0.9;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction hexagon(parent, bbox, node) {\n  const f = 4;\n  const h = bbox.height;\n  const m = h / f;\n  const w = bbox.width + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction rect_left_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction lean_right(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction lean_left(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 2 * h / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - 2 * h / 6, y: -h },\n    { x: -h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction inv_trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: -2 * h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction rect_right_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction stadium(parent, bbox, node) {\n  const h = bbox.height;\n  const w = bbox.width + h / 4;\n  const shapeSvg = parent.insert(\"rect\", \":first-child\").attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n}\nfunction subroutine(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction cylinder(parent, bbox, node) {\n  const w = bbox.width;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry;\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\n  const shapeSvg = parent.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\n  node.intersect = function(point) {\n    const pos = intersectRect(node, point);\n    const x = pos.x - node.x;\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n      let y = ry * ry * (1 - x * x / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n      pos.y += y;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}\nfunction addToRender(render2) {\n  render2.shapes().question = question;\n  render2.shapes().hexagon = hexagon;\n  render2.shapes().stadium = stadium;\n  render2.shapes().subroutine = subroutine;\n  render2.shapes().cylinder = cylinder;\n  render2.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n  render2.shapes().lean_right = lean_right;\n  render2.shapes().lean_left = lean_left;\n  render2.shapes().trapezoid = trapezoid;\n  render2.shapes().inv_trapezoid = inv_trapezoid;\n  render2.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\nfunction addToRenderV2(addShape) {\n  addShape({ question });\n  addShape({ hexagon });\n  addShape({ stadium });\n  addShape({ subroutine });\n  addShape({ cylinder });\n  addShape({ rect_left_inv_arrow });\n  addShape({ lean_right });\n  addShape({ lean_left });\n  addShape({ trapezoid });\n  addShape({ inv_trapezoid });\n  addShape({ rect_right_inv_arrow });\n}\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  ).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\n}\nconst flowChartShapes = {\n  addToRender,\n  addToRenderV2\n};\nconst conf = {};\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = async function(vert, g, svgId, root, _doc, diagObj) {\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n  const doc = !_doc ? document : _doc;\n  const keys = Object.keys(vert);\n  for (const id of keys) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const node = {\n        label: await renderKatex(\n          vertexText.replace(\n            /fa[blrs]?:fa-[\\w-]+/g,\n            // cspell:disable-line\n            (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n          ),\n          getConfig()\n        )\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n      svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n      const rows = vertexText.split(common.lineBreakRegex);\n      for (const row of rows) {\n        const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n        tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        tspan.setAttribute(\"dy\", \"1em\");\n        tspan.setAttribute(\"x\", \"1\");\n        tspan.textContent = row;\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n    let radius = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radius = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    log.warn(\"Adding node\", vertex.id, vertex.domId);\n    g.setNode(diagObj.db.lookUpDomId(vertex.id), {\n      labelType: \"svg\",\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      label: vertexNode,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: diagObj.db.lookUpDomId(vertex.id)\n    });\n  }\n};\nconst addEdges = async function(edges, g, diagObj) {\n  let cnt = 0;\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  for (const edge of edges) {\n    cnt++;\n    const linkId = \"L-\" + edge.start + \"-\" + edge.end;\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = {};\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      switch (edge.stroke) {\n        case \"normal\":\n          style = \"fill:none\";\n          if (defaultStyle !== void 0) {\n            style = defaultStyle;\n          }\n          if (defaultLabelStyle !== void 0) {\n            labelStyle = defaultLabelStyle;\n          }\n          break;\n        case \"dotted\":\n          style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n          break;\n        case \"thick\":\n          style = \" stroke-width: 3.5px;fill:none\";\n          break;\n      }\n    }\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        edgeData.labelType = \"html\";\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${edgeData.labelStyle}\">${await renderKatex(\n          edge.text.replace(\n            /fa[blrs]?:fa-[\\w-]+/g,\n            // cspell:disable-line\n            (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n          ),\n          getConfig()\n        )}</span>`;\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    edgeData.id = linkId;\n    edgeData.class = linkNameStart + \" \" + linkNameEnd;\n    edgeData.minlen = edge.length || 1;\n    g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\n  }\n};\nconst getClasses = function(text, diagObj) {\n  log.info(\"Extracting classes\");\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  const { securityLevel, flowchart: conf2 } = getConfig();\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    diagObj.db.addVertex(subG.id, subG.title, \"group\", void 0, subG.classes);\n  }\n  const vert = diagObj.db.getVertices();\n  log.warn(\"Get vertices\", vert);\n  const edges = diagObj.db.getEdges();\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.warn(\n        \"Setting subgraph\",\n        subG.nodes[j],\n        diagObj.db.lookUpDomId(subG.nodes[j]),\n        diagObj.db.lookUpDomId(subG.id)\n      );\n      g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n    }\n  }\n  await addVertices(vert, g, id, root, doc, diagObj);\n  await addEdges(edges, g, diagObj);\n  const render$1 = new render();\n  flowChartShapes.addToRender(render$1);\n  render$1.arrows().none = function normal(parent, id2, edge, type) {\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n    const path = marker.append(\"path\").attr(\"d\", \"M 0 0 L 0 0 L 0 0 z\");\n    applyStyle(path, edge[type + \"Style\"]);\n  };\n  render$1.arrows().normal = function normal(parent, id2) {\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n    marker.append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowheadPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n  };\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  render$1(element, g);\n  element.selectAll(\"g.node\").attr(\"title\", function() {\n    return diagObj.db.getTooltip(this.id);\n  });\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  for (i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n    if (subG.title !== \"undefined\") {\n      const clusterRects = doc.querySelectorAll(\n        \"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect'\n      );\n      const clusterEl = doc.querySelectorAll(\n        \"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]'\n      );\n      const xPos = clusterRects[0].x.baseVal.value;\n      const yPos = clusterRects[0].y.baseVal.value;\n      const _width = clusterRects[0].width.baseVal.value;\n      const cluster = select(clusterEl[0]);\n      const te = cluster.select(\".label\");\n      te.attr(\"transform\", `translate(${xPos + _width / 2}, ${yPos + 14})`);\n      te.attr(\"id\", id + \"Text\");\n      for (let j = 0; j < subG.classes.length; j++) {\n        clusterEl[0].classList.add(subG.classes[j]);\n      }\n    }\n  }\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  const keys = Object.keys(vert);\n  keys.forEach(function(key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = root.select(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function() {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function() {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function() {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRenderer = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst diagram = {\n  parser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: (cnf) => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    flowRenderer.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen(\"gen-1\");\n  }\n};\nexport {\n  diagram\n};\n","import { render } from './dagre-js/render.js';\nimport * as graphlib from './graphlib/index.js';\n\nimport * as intersect from './dagre-js/intersect/index.js';\n\nexport { graphlib, intersect, render };\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { layout } from '../dagre/index.js';\nimport { arrows, setArrows } from './arrows.js';\nimport { createClusters, setCreateClusters } from './create-clusters.js';\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\nimport { createNodes, setCreateNodes } from './create-nodes.js';\nimport { positionClusters } from './position-clusters.js';\nimport { positionEdgeLabels } from './position-edge-labels.js';\nimport { positionNodes } from './position-nodes.js';\nimport { shapes, setShapes } from './shapes.js';\n\nexport { render };\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var fn = function (svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    setCreateNodes(value);\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    setCreateClusters(value);\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    setCreateEdgeLabels(value);\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    setCreateEdgePaths(value);\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    setShapes(value);\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    setArrows(value);\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  curve: d3.curveLinear,\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX,\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY,\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding,\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n","import * as util from './util.js';\n\nexport { arrows, setArrows };\n\nvar arrows = {\n  normal,\n  vee,\n  undirected,\n};\n\nfunction setArrows(value) {\n  arrows = value;\n}\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 5 L 10 5')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n","import * as _ from 'lodash-es';\n\n// Public utility functions\nexport { isSubgraph, edgeToId, applyStyle, applyClass, applyTransition };\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","import * as d3 from 'd3';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createClusters, setCreateClusters };\n\nvar createClusters = function (selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  var enterSelection = svgClusters\n    .enter()\n    .append('g')\n    .attr('class', 'cluster')\n    .attr('id', function (v) {\n      var node = g.node(v);\n      return node.id;\n    })\n    .style('opacity', 0)\n    .each(function (v) {\n      var node = g.node(v);\n      var thisGroup = d3.select(this);\n      d3.select(this).append('rect');\n      var labelGroup = thisGroup.append('g').attr('class', 'label');\n      addLabel(labelGroup, node, node.clusterLabelPos);\n    });\n\n  svgClusters = svgClusters.merge(enterSelection);\n\n  svgClusters = util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  return svgClusters;\n};\n\nfunction setCreateClusters(value) {\n  createClusters = value;\n}\n","import { addHtmlLabel } from './add-html-label.js';\nimport { addSVGLabel } from './add-svg-label.js';\nimport { addTextLabel } from './add-text-label.js';\n\nexport { addLabel };\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g');\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n","import * as util from '../util.js';\n\nexport { addHtmlLabel };\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div.node().getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n","import * as util from '../util.js';\n\nexport { addSVGLabel };\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","import * as util from '../util.js';\n\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append('tspan')\n      .attr('xml:space', 'preserve')\n      .attr('dy', '1em')\n      .attr('x', '1')\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createEdgeLabels, setCreateEdgeLabels };\n\nlet createEdgeLabels = function (selection, g) {\n  var svgEdgeLabels = selection\n    .selectAll('g.edgeLabel')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n\n  svgEdgeLabels = selection.selectAll('g.edgeLabel');\n\n  svgEdgeLabels.each(function (e) {\n    var root = d3.select(this);\n    root.select('.label').remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n};\n\nfunction setCreateEdgeLabels(value) {\n  createEdgeLabels = value;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { intersectNode } from './intersect/intersect-node.js';\nimport * as util from './util.js';\n\nexport { createEdgePaths, setCreateEdgePaths };\n\nvar createEdgePaths = function (selection, g, arrows) {\n  var previousPaths = selection\n    .selectAll('g.edgePath')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  var newPaths = enter(previousPaths, g);\n  exit(previousPaths, g);\n\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n  util.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(\n      domEdge,\n      edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\n    );\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3\n      .select(this)\n      .attr('marker-end', function () {\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n      })\n      .style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n};\n\nfunction setCreateEdgePaths(value) {\n  createEdgePaths = value;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  // @ts-expect-error\n  var line = (d3.line || d3.svg.line)()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  (line.curve || line.interpolate)(edge.curve);\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement\n    .getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter\n    .append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      var edge = g.edge(e);\n      var sourceElem = g.node(e.v).elem;\n      var points = _.range(edge.points.length).map(function () {\n        return getCoords(sourceElem);\n      });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append('defs');\n  return svgPathsEnter;\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n","export { intersectNode };\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createNodes, setCreateNodes };\n\nvar createNodes = function (selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection\n    .selectAll('g.node')\n    .data(simpleNodes, function (v) {\n      return v;\n    })\n    .classed('update', true);\n\n  svgNodes.exit().remove();\n\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n\n  svgNodes = selection.selectAll('g.node');\n\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    util.applyClass(\n      thisGroup,\n      node['class'],\n      (thisGroup.classed('update') ? 'update ' : '') + 'node'\n    );\n\n    thisGroup.select('g.label').remove();\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\n      'transform',\n      'translate(' +\n        (node.paddingLeft - node.paddingRight) / 2 +\n        ',' +\n        (node.paddingTop - node.paddingBottom) / 2 +\n        ')'\n    );\n\n    var root = d3.select(this);\n    root.select('.label-container').remove();\n    var shapeSvg = shape(root, bbox, node).classed('label-container', true);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  var exitSelection;\n\n  if (svgNodes.exit) {\n    exitSelection = svgNodes.exit();\n  } else {\n    exitSelection = svgNodes.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgNodes;\n};\n\nfunction setCreateNodes(value) {\n  createNodes = value;\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionClusters };\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util\n    .applyTransition(created.selectAll('rect'), g)\n    .attr('width', function (v) {\n      return g.node(v).width;\n    })\n    .attr('height', function (v) {\n      return g.node(v).height;\n    })\n    .attr('x', function (v) {\n      var node = g.node(v);\n      return -node.width / 2;\n    })\n    .attr('y', function (v) {\n      var node = g.node(v);\n      return -node.height / 2;\n    });\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { positionEdgeLabels };\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionNodes };\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\n\nexport { shapes, setShapes };\n\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond,\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('width', bbox.width)\n    .attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent\n    .insert('ellipse', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('rx', rx)\n    .attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent\n    .insert('circle', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2;\n  var h = (bbox.height * Math.SQRT2) / 2;\n  var points = [\n    { x: 0, y: -h },\n    { x: -w, y: 0 },\n    { x: 0, y: h },\n    { x: w, y: 0 },\n  ];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (p) {\n        return p.x + ',' + p.y;\n      })\n      .join(' ')\n  );\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","import { intersectEllipse } from './intersect-ellipse.js';\n\nexport { intersectCircle };\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","export { intersectEllipse };\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n","import { intersectLine } from './intersect-line.js';\n\nexport { intersectPolygon };\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","export { intersectLine };\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","export { intersectRect };\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n","import * as node from './intersect-node.js';\nimport * as circle from './intersect-circle.js';\nimport * as ellipse from './intersect-ellipse.js';\nimport * as polygon from './intersect-polygon.js';\nimport * as rect from './intersect-rect.js';\n\nexport { node, circle, ellipse, polygon, rect };\n","import * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { curveLinear, select, selectAll } from \"d3\";\nimport { k as getStylesFromArray, l as log, m as evaluate, c as getConfig, e as common, r as renderKatex, n as interpolateToCurve, u as utils, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { r as render } from \"./index-3862675e.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport * as khroma from \"khroma\";\nconst conf = {};\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = async function(vert, g, svgId, root, doc, diagObj) {\n  const svg = root.select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(vert);\n  for (const id of keys) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    classStr = classStr + \" flowchart-label\";\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    log.info(\"vertex\", vertex, vertex.labelType);\n    if (vertex.labelType === \"markdown\") {\n      log.info(\"vertex\", vertex, vertex.labelType);\n    } else {\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        const node = {\n          label: vertexText\n        };\n        vertexNode = addHtmlLabel(svg, node).node();\n        vertexNode.parentNode.removeChild(vertexNode);\n      } else {\n        const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n        const rows = vertexText.split(common.lineBreakRegex);\n        for (const row of rows) {\n          const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n          tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n          tspan.setAttribute(\"dy\", \"1em\");\n          tspan.setAttribute(\"x\", \"1\");\n          tspan.textContent = row;\n          svgLabel.appendChild(tspan);\n        }\n        vertexNode = svgLabel;\n      }\n    }\n    let radius = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radius = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      case \"doublecircle\":\n        _shape = \"doublecircle\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    const labelText = await renderKatex(vertexText, getConfig());\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText,\n      labelType: vertex.labelType,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      link: vertex.link,\n      linkTarget: vertex.linkTarget,\n      tooltip: diagObj.db.getTooltip(vertex.id) || \"\",\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      haveCallback: vertex.haveCallback,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      dir: vertex.dir,\n      type: vertex.type,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n    log.info(\"setNode\", {\n      labelStyle: styles.labelStyle,\n      labelType: vertex.labelType,\n      shape: _shape,\n      labelText,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      dir: vertex.dir,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n  }\n};\nconst addEdges = async function(edges, g, diagObj) {\n  log.info(\"abc78 edges = \", edges);\n  let cnt = 0;\n  let linkIdCnt = {};\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  for (const edge of edges) {\n    cnt++;\n    const linkIdBase = \"L-\" + edge.start + \"-\" + edge.end;\n    if (linkIdCnt[linkIdBase] === void 0) {\n      linkIdCnt[linkIdBase] = 0;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    } else {\n      linkIdCnt[linkIdBase]++;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    }\n    let linkId = linkIdBase + \"-\" + linkIdCnt[linkIdBase];\n    log.info(\"abc78 new link id to be used is\", linkIdBase, linkId, linkIdCnt[linkIdBase]);\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = { style: \"\", labelStyle: \"\" };\n    edgeData.minlen = edge.length || 1;\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    edgeData.arrowTypeStart = \"arrow_open\";\n    edgeData.arrowTypeEnd = \"arrow_open\";\n    switch (edge.type) {\n      case \"double_arrow_cross\":\n        edgeData.arrowTypeStart = \"arrow_cross\";\n      case \"arrow_cross\":\n        edgeData.arrowTypeEnd = \"arrow_cross\";\n        break;\n      case \"double_arrow_point\":\n        edgeData.arrowTypeStart = \"arrow_point\";\n      case \"arrow_point\":\n        edgeData.arrowTypeEnd = \"arrow_point\";\n        break;\n      case \"double_arrow_circle\":\n        edgeData.arrowTypeStart = \"arrow_circle\";\n      case \"arrow_circle\":\n        edgeData.arrowTypeEnd = \"arrow_circle\";\n        break;\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    switch (edge.stroke) {\n      case \"normal\":\n        style = \"fill:none;\";\n        if (defaultStyle !== void 0) {\n          style = defaultStyle;\n        }\n        if (defaultLabelStyle !== void 0) {\n          labelStyle = defaultLabelStyle;\n        }\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"solid\";\n        break;\n      case \"dotted\":\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"dotted\";\n        edgeData.style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n        break;\n      case \"thick\":\n        edgeData.thickness = \"thick\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 3.5px;fill:none;\";\n        break;\n      case \"invisible\":\n        edgeData.thickness = \"invisible\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 0;fill:none;\";\n        break;\n    }\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    }\n    edgeData.style = edgeData.style += style;\n    edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n    }\n    edgeData.labelType = edge.labelType;\n    edgeData.label = await renderKatex(edge.text.replace(common.lineBreakRegex, \"\\n\"), getConfig());\n    if (edge.style === void 0) {\n      edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none;\";\n    }\n    edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n    edgeData.id = linkId;\n    edgeData.classes = \"flowchart-link \" + linkNameStart + \" \" + linkNameEnd;\n    g.setEdge(edge.start, edge.end, edgeData, cnt);\n  }\n};\nconst getClasses = function(text, diagObj) {\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const { securityLevel, flowchart: conf2 } = getConfig();\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 0,\n    marginy: 0\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  log.info(\"Subgraphs - \", subGraphs);\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    log.info(\"Subgraph - \", subG);\n    diagObj.db.addVertex(\n      subG.id,\n      { text: subG.title, type: subG.labelType },\n      \"group\",\n      void 0,\n      subG.classes,\n      subG.dir\n    );\n  }\n  const vert = diagObj.db.getVertices();\n  const edges = diagObj.db.getEdges();\n  log.info(\"Edges\", edges);\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.info(\"Setting up subgraphs\", subG.nodes[j], subG.id);\n      g.setParent(subG.nodes[j], subG.id);\n    }\n  }\n  await addVertices(vert, g, id, root, doc, diagObj);\n  await addEdges(edges, g);\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(element, g, [\"point\", \"circle\", \"cross\"], \"flowchart\", id);\n  utils.insertTitle(svg, \"flowchartTitleText\", conf2.titleTopMargin, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  const keys = Object.keys(vert);\n  keys.forEach(function(key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = select(\"#\" + id + ' [id=\"' + key + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function() {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function() {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function() {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRendererV2 = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst fade = (color, opacity) => {\n  const channel = khroma.channel;\n  const r = channel(color, \"r\");\n  const g = channel(color, \"g\");\n  const b = channel(color, \"b\");\n  return khroma.rgba(r, g, b, opacity);\n};\nconst getStyles = (options) => `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .katex path {\n    fill: #000;\n    stroke: #000;\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color: \n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\nconst flowStyles = getStyles;\nexport {\n  flowStyles as a,\n  flowRendererV2 as f\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","diagram","_flowDb956E92F1Js","_indexJs","_d3","_mermaidB5860B54Js","_dagreD3Es","_utilJs","_addHtmlLabelJs","_intersectPolygonJs","_intersectRectJs","_stylesC10674C1Js","question","bbox","node","s","w","width","height","h","points","y","shapeSvg","insertPolygonShape","intersect","point","intersectPolygon","hexagon","m","rect_left_inv_arrow","lean_right","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","stadium","insert","attr","intersectRect","subroutine","cylinder","rx","ry","pos","Math","abs","sqrt","map","d","join","render2","shapes","conf","addVertices","vert","g","svgId","root","_doc","diagObj","svg","select","doc","document","keys","vertexNode","vertex","classStr","classes","styles","k","vertexText","text","c","flowchart","htmlLabels","label","r","replace","addHtmlLabel","parentNode","removeChild","svgLabel","createElementNS","row","setAttribute","labelStyle","split","e","lineBreakRegex","tspan","setAttributeNS","textContent","appendChild","radius","_shape","type","l","warn","domId","setNode","db","lookUpDomId","labelType","shape","class","style","addEdges","edges","defaultStyle","defaultLabelStyle","cnt","defaultStyles","edge","linkId","start","end","linkNameStart","linkNameEnd","edgeData","arrowhead","stroke","interpolate","curve","n","curveLinear","defaultInterpolate","arrowheadStyle","labelpos","minlen","setEdge","draw","_version","sandboxElement","subG","info","securityLevel","conf2","nodes","contentDocument","body","dir","getDirection","nodeSpacing","rankSpacing","Graph","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","subGraphs","getSubGraphs","i2","addVertex","title","getVertices","getEdges","selectAll","append","j","setParent","render$1","render","flowChartShapes","arrows","none","id2","path","marker","applyStyle","normal","element","getTooltip","indexNodes","clusterRects","querySelectorAll","clusterEl","xPos","baseVal","value","yPos","_width","te","cluster","classList","add","dim","getBBox","rect","insertBefore","firstChild","o","diagramPadding","useMaxWidth","forEach","key","link","linkTarget","linkNode","cnf","parser","p","f","renderer","a","init","arrowMarkerAbsolute","flowRenderer","clear","setGen","_indexJs1","_renderJs","_lodashEs","_arrowsJs","_createClustersJs","_createEdgeLabelsJs","_createEdgePathsJs","_createNodesJs","_positionClustersJs","_positionEdgeLabelsJs","_positionNodesJs","_shapesJs","fn","v","has","children","defaults","paddingLeft","paddingX","paddingRight","paddingTop","paddingY","paddingBottom","padding","NODE_DEFAULT_ATTRS","each","Number","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","createEdgeLabels","createNodes","layout","positionNodes","positionEdgeLabels","createEdgePaths","clusters","createClusters","positionClusters","arguments","setCreateNodes","setCreateClusters","setCreateEdgeLabels","setCreateEdgePaths","setShapes","setArrows","selection","empty","vee","undirected","isSubgraph","edgeToId","applyClass","applyTransition","escapeId","ID_DELIM","str","String","dom","styleFn","classFn","otherClasses","graph","isPlainObject","transition","isFunction","_addLabelJs","filter","svgClusters","data","exit","remove","enterSelection","enter","thisGroup","labelGroup","addLabel","clusterLabelPos","merge","domCluster","_addSvgLabelJs","_addTextLabelJs","location","labelSvg","addSVGLabel","addTextLabel","labelBBox","fo","div","html","client","getBoundingClientRect","domNode","lines","processEscapeSequences","ch","newText","escaped","exitSelection","svgEdgeLabels","classed","labelId","_intersectNodeJs","svgPathsEnter","previousPaths","newPaths","svgPaths","sourceElem","elem","range","matrix","ownerSVGElement","getScreenCTM","inverse","multiply","translate","createLine","svgPathExit","undefined","domEdge","arrowheadId","uniqueId","url","fragmentId","href","baseUrl","tail","head","slice","unshift","intersectNode","push","line","simpleNodes","svgNodes","labelDom","pick","shapeBBox","created","_intersectCircleJs","_intersectEllipseJs","ellipse","intersectEllipse","circle","max","intersectCircle","diamond","SQRT2","cx","cy","px","py","det","dx","dy","_intersectLineJs","polyPoints","x1","y1","intersections","minX","POSITIVE_INFINITY","minY","min","left","top","p1","p2","intersectLine","sort","q","pdx","pdy","distp","qdx","qdy","distq","console","log","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sx","sy","flowStyles","flowRendererV2","_index3862675EJs","_khroma","labelText","tooltip","haveCallback","props","linkIdCnt","linkIdBase","arrowTypeStart","arrowTypeEnd","thickness","pattern","u","insertTitle","titleTopMargin","getDiagramTitle","setConf","getClasses","fade","color","opacity","channel","b","rgba","options","fontFamily","nodeTextColor","textColor","titleColor","mainBkg","nodeBorder","arrowheadColor","lineColor","edgeLabelBackground","clusterBkg","clusterBorder","tertiaryColor","border2"],"version":3,"file":"flowDiagram-66a62f08.0fb69c2e.js.map"}